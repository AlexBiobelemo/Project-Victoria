[
  {
    "id": "100",
    "title": "Introduction to Algorithms",
    "description": "Basic concepts of algorithm design",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"algorithms",
      " sorting",
      " search\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Introduction to Algorithms by CLRS",
        "url": "https://mitpress.mit.edu/9780262033848/introduction-to-algorithms/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Algorithms Course by Stanford",
        "url": "https://www.coursera.org/learn/algorithms-part1",
        "resource_type": "Course"
      },
      {
        "resource_title": "Sorting Algorithm Visualization",
        "url": "https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Algorithm Pseudocode",
        "url": "https://www.algorithmist.com/index.php/Main_Page",
        "resource_type": "Article"
      },
      {
        "resource_title": "Algorithm Challenge Platform",
        "url": "https://leetcode.com/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Sorting Visualizer,Design a program that visualizes the bubble sort algorithm using a graphical interface (e.g., Python with Tkinter), showing array changes step-by-step.,Intermediate",
        "problem_description": "A window displaying bars being sorted with color changes",
        "difficulty": "- Use a list to represent bars; update colors on each swap.",
        "hints": NaN
      },
      {
        "problem_title": "Efficient Search Tool,Implement a binary search algorithm in any language to find an element in a sorted array, with a function to measure execution time.,Beginner,A function returning the index and time taken (e.g.",
        "problem_description": " in milliseconds)",
        "difficulty": "- Ensure the array is sorted first; use time module in Python.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "101",
    "title": "Data Structures",
    "description": "\"Fundamentals of arrays",
    "prerequisites": [],
    "difficulty": " linked lists",
    "keywords": [
      " and trees\"",
      "Beginner",
      "\"data structures",
      " arrays",
      " trees\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Structures Basics",
        "url": "https://www.geeksforgeeks.org/data-structures/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Linked List Tutorial",
        "url": "https://www.tutorialspoint.com/data_structures_algorithms/linked_list_program_in_c.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Tree Data Structure Video",
        "url": "https://www.youtube.com/watch?v=oSWTXtMglKE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Data Structures Book",
        "url": "https://www.pearson.com/en-us/subject-catalog/p/data-structures-and-algorithms/P200000003030/9780134287479",
        "resource_type": "Book"
      },
      {
        "resource_title": "Data Structures Course",
        "url": "https://www.edx.org/course/data-structures",
        "resource_type": "Course"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Linked List Manager,Create a program to manage a linked list with functions to add, remove, and display nodes (e.g., in C or Python).,Intermediate",
        "problem_description": "A console output listing nodes after operations",
        "difficulty": "- Use a Node class with next pointer; test with 5 elements.",
        "hints": NaN
      },
      {
        "problem_title": "Binary Tree Simulator,Design a binary tree data structure with methods to insert and traverse (in-order) in Java, outputting the traversal result.,Intermediate,Console output of in-order traversal (e.g.",
        "problem_description": " 1 2 3)",
        "difficulty": "- Start with a TreeNode class; implement recursive traversal.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "102",
    "title": "Object-Oriented Programming",
    "description": "Principles of OOP and class design",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"OOP",
      " classes",
      " inheritance\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "OOP Concepts Explained",
        "url": "https://www.w3schools.com/java/java_oop.asp",
        "resource_type": "Article"
      },
      {
        "resource_title": "Java OOP Tutorial",
        "url": "https://www.javatpoint.com/java-oop-concepts",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "OOP Crash Course",
        "url": "https://www.youtube.com/watch?v=klcIklsWqMw",
        "resource_type": "Video"
      },
      {
        "resource_title": "OOP Principles Video",
        "url": "https://www.youtube.com/watch?v=klcIklsWqMw",
        "resource_type": "Video"
      },
      {
        "resource_title": "OOP Design Tutorial",
        "url": "https://refactoring.guru/design-patterns/book",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Vehicle Class Hierarchy,Develop a Java class hierarchy with a Vehicle base class and derived classes Car and Motorcycle, including a method to calculate fuel needs.,Intermediate,Output of fuel needs for a Car (e.g.",
        "problem_description": " 50 liters)",
        "difficulty": "- Use inheritance; add attributes like fuel efficiency.",
        "hints": NaN
      },
      {
        "problem_title": "Game Object System,Create a Python OOP system with a GameObject class and subclasses Player and Enemy, with methods for movement and health tracking.,Intermediate",
        "problem_description": "A console log of player/enemy positions and health",
        "difficulty": "- Implement polymorphism for movement.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "103",
    "title": "Database Management",
    "description": "Introduction to SQL and database design",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"SQL",
      " databases",
      " normalization\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "SQL Basics",
        "url": "https://www.postgresqltutorial.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Database Design Guide",
        "url": "https://www.lucidchart.com/pages/database-diagram/database-design",
        "resource_type": "Article"
      },
      {
        "resource_title": "SQL for Beginners Video",
        "url": "https://www.youtube.com/watch?v=7S_tz1z_5bA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Database Indexing",
        "url": "https://www.postgresql.org/docs/current/indexes.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "SQL Practice Platform",
        "url": "https://sqlzoo.net/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Database Query Tool,Build a SQL script to create a table for employees (id, name, salary) and write a query to find the highest-paid employee.,Beginner",
        "problem_description": "A query result showing one employee record",
        "difficulty": "- Use CREATE TABLE and SELECT MAX(salary).",
        "hints": NaN
      },
      {
        "problem_title": "Multi-Table Join,Write a SQL query to join an employees table with a departments table and list all employee-department pairs.,Intermediate",
        "problem_description": "Console output: joined table rows",
        "difficulty": "- Use JOIN and test with 5 records each.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "104",
    "title": "Computer Networks",
    "description": "Basics of networking and protocols",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"networks",
      " TCP/IP",
      " protocols\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computer Networks Tutorial",
        "url": "https://www.javatpoint.com/computer-network",
        "resource_type": "Article"
      },
      {
        "resource_title": "Networking Protocols Course",
        "url": "https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:the-internet/xcae6f4a7ff015e7d:transporting-packets/a/the-internet-transporting-packets",
        "resource_type": "Course"
      },
      {
        "resource_title": "Network Simulation Tool",
        "url": "https://www.net-sim.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Network Security Guide",
        "url": "https://www.cisco.com/c/en/us/solutions/security/index.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Network Simulation Software",
        "url": "https://www.gns3.com/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Network Ping Simulator,Create a Python script to simulate a network ping test, calculating average response time for 5 virtual nodes.,Intermediate",
        "problem_description": "Console output: \"Average ping: 50ms\"",
        "difficulty": "- Use random delays and a loop.",
        "hints": NaN
      },
      {
        "problem_title": "Packet Sniffer Simulator,Design a Python script to simulate capturing and logging 10 network packets with timestamps.,Intermediate",
        "problem_description": "Console output: packet log",
        "difficulty": "- Use datetime.now() and a list.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "105",
    "title": "Artificial Intelligence",
    "description": "Overview of AI and machine learning",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"AI",
      " machine learning",
      " neural networks\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "AI Fundamentals",
        "url": "https://www.coursera.org/learn/machine-learning",
        "resource_type": "Course"
      },
      {
        "resource_title": "Machine Learning Book",
        "url": "https://www.deeplearningbook.org/",
        "resource_type": "Book"
      },
      {
        "resource_title": "AI Explained Video",
        "url": "https://www.youtube.com/watch?v=5qX4PyvSTcA",
        "resource_type": "Video"
      },
      {
        "resource_title": "AI Ethics",
        "url": "https://www.nature.com/articles/s42256-019-0052-2",
        "resource_type": "Article"
      },
      {
        "resource_title": "AI Coding Tutorial",
        "url": "https://www.tensorflow.org/tutorials",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "AI Chatbot Prototype,Design a simple Python chatbot that responds with predefined answers to basic greetings (e.g., \"hi\" \u2192 \"Hello!\").,Intermediate,Console output: \"User: hi",
        "problem_description": " Bot: Hello!\"",
        "difficulty": "- Use if-elif for responses; store in a dictionary.",
        "hints": NaN
      },
      {
        "problem_title": "ML Image Classifier,Build a Python script using scikit-learn to classify 20 images into 2 categories.,Advanced",
        "problem_description": "Console output: accuracy score",
        "difficulty": "- Use a simple dataset and train_test_split.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "106",
    "title": "Cybersecurity Fundamentals",
    "description": "Introduction to security principles",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"cybersecurity",
      " encryption",
      " hacking\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cybersecurity Basics",
        "url": "https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:security-and-cryptography",
        "resource_type": "Article"
      },
      {
        "resource_title": "Encryption Tutorial",
        "url": "https://www.tutorialspoint.com/cryptography/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Cybersecurity Course",
        "url": "https://www.coursera.org/learn/cybersecurity-basics",
        "resource_type": "Course"
      },
      {
        "resource_title": "Cybersecurity Certifications",
        "url": "https://www.comptia.org/certifications/security",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cyber Range Training",
        "url": "https://www.cyberranges.com/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cybersecurity Scanner,Write a Python script to check if a list of 5 passwords meets basic security rules (length > 8, has digit).,Beginner,Console output: \"Password1: Secure",
        "problem_description": " Password2: Insecure\"",
        "difficulty": "- Use string methods like len() and isdigit().",
        "hints": NaN
      },
      {
        "problem_title": "Encryption Decryptor,Create a Python script to decrypt a message encrypted with a Caesar cipher (shift 3).,Intermediate",
        "problem_description": "Console output: \"def\" \u2192 \"abc\"",
        "difficulty": "- Use modulo 26 and reverse shift.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "107",
    "title": "Operating Systems",
    "description": "Core concepts of OS and process management",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"OS",
      " processes",
      " threads\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "OS Concepts",
        "url": "https://www.tutorialspoint.com/operating_system/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Process Management Video",
        "url": "https://www.youtube.com/watch?v=7n8L1Y0i5o8",
        "resource_type": "Video"
      },
      {
        "resource_title": "OS Simulation Tool",
        "url": "https://www.os-book.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "OS Virtualization",
        "url": "https://www.virtualbox.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "OS Kernel Development",
        "url": "https://www.kernel.org/doc/html/latest/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "OS Process Monitor,Develop a C program to list the current processes (e.g., using system calls) and print their IDs.,Intermediate",
        "problem_description": "Console output: list of PIDs",
        "difficulty": "- Use system(\"ps\") on Unix or Windows equivalent.",
        "hints": NaN
      },
      {
        "problem_title": "File System Navigator,Write a C program to traverse a directory and list all files with their sizes.,Intermediate",
        "problem_description": "Console output: file list with sizes",
        "difficulty": "- Use opendir() and stat().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "108",
    "title": "Web Development",
    "description": "\"Basics of HTML",
    "prerequisites": [],
    "difficulty": " CSS",
    "keywords": [
      " and JavaScript\"",
      "Beginner",
      "\"web development",
      " HTML",
      " JavaScript\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "HTML Basics",
        "url": "https://www.w3schools.com/html/",
        "resource_type": "Article"
      },
      {
        "resource_title": "CSS Tutorial",
        "url": "https://www.w3schools.com/css/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Web Dev Video Series",
        "url": "https://www.youtube.com/watch?v=UB1O30fR-EE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Web Accessibility",
        "url": "https://www.w3.org/WAI/fundamentals/accessibility-intro/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Web Dev Bootcamp",
        "url": "https://www.theodinproject.com/",
        "resource_type": "Course"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Web Accessibility Checker,Create an HTML page with a form and add ARIA labels to ensure accessibility for screen readers.,Beginner",
        "problem_description": "A webpage with accessible form elements",
        "difficulty": "- Use aria-label and test with a screen reader.",
        "hints": NaN
      },
      {
        "problem_title": "Responsive Form Design,Enhance the HTML form with CSS media queries for mobile responsiveness (max-width: 600px).,Intermediate",
        "problem_description": "A webpage adjusting layout on mobile",
        "difficulty": "- Use @media query to adjust form width.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "109",
    "title": "Cloud Computing",
    "description": "Introduction to cloud services and deployment",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"cloud",
      " AWS",
      " deployment\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cloud Computing Guide",
        "url": "https://aws.amazon.com/getting-started/",
        "resource_type": "Article"
      },
      {
        "resource_title": "AWS Free Tier Tutorial",
        "url": "https://aws.amazon.com/free/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Cloud Basics Video",
        "url": "https://www.youtube.com/watch?v=7wN4Q8X7bS0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Cloud Cost Management",
        "url": "https://aws.amazon.com/aws-cost-management/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cloud Security Best Practices",
        "url": "https://cloudsecurityalliance.org/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cloud Cost Estimator,Build a Python script to calculate the estimated monthly cost of AWS EC2 instances based on user input (e.g., 2 instances, 10 hours).,Intermediate,Console output: \"Estimated cost: $10\"",
        "problem_description": "- Use a simple rate formula (e.g.",
        "difficulty": " $0.05/hour).",
        "hints": NaN
      },
      {
        "problem_title": "Cloud Load Balancer,Simulate a Python script to distribute 100 requests across 3 cloud servers.,Intermediate",
        "problem_description": "Console output: request distribution",
        "difficulty": "- Use random allocation.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "110",
    "title": "Algorithm Analysis",
    "description": "Techniques for evaluating algorithm efficiency",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"analysis",
      " complexity",
      " time efficiency\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Algorithm Analysis",
        "url": "https://www.geeksforgeeks.org/analysis-of-algorithms/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Dynamic Programming Tutorial",
        "url": "https://www.programiz.com/dsa/dynamic-programming",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Algo Video Lecture",
        "url": "https://www.youtube.com/watch?v=0IAPZzGSbME",
        "resource_type": "Video"
      },
      {
        "resource_title": "Algorithm Optimization",
        "url": "https://www.hackerearth.com/practice/algorithms/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Complexity Analysis Video",
        "url": "https://www.youtube.com/watch?v=0IAPZzGSbME",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Algorithm Optimizer,Implement a Python function to optimize a recursive Fibonacci calculation using memoization.,Intermediate",
        "problem_description": "Console output: \"Fib(10) = 55\" (faster execution)",
        "difficulty": "- Use a dictionary to cache results.",
        "hints": NaN
      },
      {
        "problem_title": "Dynamic Programming Solver,Write a Python script to solve the knapsack problem for 5 items using DP.,Advanced,Console output: max value (e.g.",
        "problem_description": " 15)",
        "difficulty": "- Use a 2D array for DP table.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "111",
    "title": "Graph Theory",
    "description": "Study of graphs and their applications",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"graphs",
      " traversal",
      " shortest path\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Graph Theory Basics",
        "url": "https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs",
        "resource_type": "Article"
      },
      {
        "resource_title": "Graph Algorithms Course",
        "url": "https://www.coursera.org/learn/algorithms-graphs-data-structures",
        "resource_type": "Course"
      },
      {
        "resource_title": "Graph Visualization Tool",
        "url": "https://graphonline.ru/en/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Graph Theory Course",
        "url": "https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Graph Theory Book",
        "url": "https://www.springer.com/gp/book/9783319056533",
        "resource_type": "Book"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Graph Path Finder,Design a Java program to find the shortest path in a graph using Dijkstra\u2019s algorithm, with 5 nodes.,Intermediate",
        "problem_description": "Console output: \"Shortest path: 0-2-4\"",
        "difficulty": "- Use a priority queue and adjacency list.",
        "hints": NaN
      },
      {
        "problem_title": "Graph Cycle Detector,Create a Python script to detect cycles in a directed graph with 5 nodes.,Intermediate",
        "problem_description": "Console output: \"Cycle detected: Yes\"",
        "difficulty": "- Use DFS with visited sets.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "112",
    "title": "Functional Programming",
    "description": "Principles of functional programming paradigms",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"FP",
      " lambda",
      " recursion\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Functional Programming",
        "url": "https://www.haskell.org/tutorial/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Haskell Tutorial",
        "url": "https://www.tutorialspoint.com/haskell/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "FP Video Series",
        "url": "https://www.youtube.com/watch?v=0xLJBxD7Dj0",
        "resource_type": "Video"
      },
      {
        "resource_title": "FP Concepts",
        "url": "https://www.functionalprogramming.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "FP in Scala Tutorial",
        "url": "https://www.scala-lang.org/docu/files/ScalaByExample.pdf",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Functional Calculator,Write a Haskell function to perform addition using a curried approach, testable with inputs 5 and 3.,Intermediate",
        "problem_description": "Console output: \"8\"",
        "difficulty": "- Use lambda or currying syntax.",
        "hints": NaN
      },
      {
        "problem_title": "Functional List Filter,Design a Haskell function to filter a list for numbers > 5, testable with [1..10].,Intermediate,Console output: [6,7,8,9",
        "problem_description": "10]",
        "difficulty": "- Use filter and (>5).",
        "hints": NaN
      }
    ]
  },
  {
    "id": "113",
    "title": "Parallel Computing",
    "description": "Concepts of parallel processing and concurrency",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"parallelism",
      " threads",
      " multiprocessing\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Parallel Computing Guide",
        "url": "https://www.mpi-forum.org/docs/",
        "resource_type": "Article"
      },
      {
        "resource_title": "MPI Tutorial",
        "url": "https://mpitutorial.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Parallel Programming Video",
        "url": "https://www.youtube.com/watch?v=4C2z1LUBkQE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Parallel Tools",
        "url": "https://www.openmp.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Parallel Computing Course",
        "url": "https://www.coursera.org/learn/parallel-computing",
        "resource_type": "Course"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Parallel Matrix Multiply,Create a Python script using multiprocessing to multiply two 3x3 matrices in parallel.,Intermediate",
        "problem_description": "Console output: 3x3 result matrix",
        "difficulty": "- Use Pool from multiprocessing module.",
        "hints": NaN
      },
      {
        "problem_title": "Parallel Data Processor,Write a Python script to process 100 data points in parallel using threading.,Intermediate",
        "problem_description": "Console output: processed results",
        "difficulty": "- Use ThreadPoolExecutor.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "114",
    "title": "Compiler Design",
    "description": "Fundamentals of compiler construction",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"compilers",
      " parsing",
      " optimization\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Compiler Design",
        "url": "https://www.javatpoint.com/compiler-design-tutorial",
        "resource_type": "Article"
      },
      {
        "resource_title": "Compiler Construction Course",
        "url": "https://www.coursera.org/learn/compiler-construction",
        "resource_type": "Course"
      },
      {
        "resource_title": "Compiler Video Lecture",
        "url": "https://www.youtube.com/watch?v=1j4mCIpVu_g",
        "resource_type": "Video"
      },
      {
        "resource_title": "Compiler Optimization",
        "url": "https://www.cs.cornell.edu/courses/cs6120/2020fa/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Compiler Parsing Guide",
        "url": "https://www.cs.cornell.edu/~appel/modern/c0/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Compiler Lexer,Build a simple lexer in Python that tokenizes a basic arithmetic expression (e.g., \"2 + 3\").,Advanced,Console output: [\"2\", \"+\"",
        "problem_description": " \"3\"]",
        "difficulty": "- Use regular expressions to split tokens.",
        "hints": NaN
      },
      {
        "problem_title": "Parser Generator,Create a Python script to generate a parse tree for \"2 + 3 * 4\" using a simple grammar.,Advanced",
        "problem_description": "Console output: tree structure",
        "difficulty": "- Use recursive descent.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "115",
    "title": "Software Engineering",
    "description": "Best practices in software development",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"SDLC",
      " agile",
      " testing\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Engineering Basics",
        "url": "https://www.tutorialspoint.com/software_engineering/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Agile Methodology Tutorial",
        "url": "https://www.atlassian.com/agile",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "SE Video Series",
        "url": "https://www.youtube.com/watch?v=0m8s3X2DvsM",
        "resource_type": "Video"
      },
      {
        "resource_title": "SE Project Management",
        "url": "https://www.pmi.org/learning/library/project-management-software-engineering-6690",
        "resource_type": "Article"
      },
      {
        "resource_title": "Software Dev Lifecycle",
        "url": "https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "SE Project Tracker,Design a Java application to track project tasks with a class Task (title, status), storing 3 tasks.,Intermediate",
        "problem_description": "Console output: list of tasks",
        "difficulty": "- Use an ArrayList to store Task objects.",
        "hints": NaN
      },
      {
        "problem_title": "Agile Sprint Planner,Write a Python script to plan a sprint with 5 tasks and estimate completion dates.,Intermediate",
        "problem_description": "Console output: task schedule",
        "difficulty": "- Use datetime for dates.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "116",
    "title": "Internet of Things (IoT)",
    "description": "Introduction to IoT devices and systems",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"IoT",
      " sensors",
      " connectivity\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Internet of Things Overview",
        "url": "https://www.postscapes.com/internet-of-things-iot/",
        "resource_type": "Article"
      },
      {
        "resource_title": "IoT Development Tutorial",
        "url": "https://www.tutorialspoint.com/iot/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "IoT Basics Video",
        "url": "https://www.youtube.com/watch?v=2N7m0mK8nG4",
        "resource_type": "Video"
      },
      {
        "resource_title": "IoT Security Tutorial",
        "url": "https://www.geeksforgeeks.org/iot-security/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "IoT Hardware Guide",
        "url": "https://www.arduino.cc/en/Guide/HomePage",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "IoT Sensor Simulator,Create a Python script to simulate an IoT sensor sending temperature readings (e.g., 25\u00b0C) every second.,Intermediate",
        "problem_description": "Console output: \"Temp: 25\u00b0C\" every second",
        "difficulty": "- Use time.sleep() and a loop.",
        "hints": NaN
      },
      {
        "problem_title": "IoT Data Logger,Build a Python script to log IoT sensor data to a file with timestamps.,Intermediate",
        "problem_description": "File with timestamped data",
        "difficulty": "- Use with open() and time.ctime().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "117",
    "title": "Mobile Computing",
    "description": "Development for mobile platforms",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"mobile",
      " Android",
      " iOS\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Mobile Computing Guide",
        "url": "https://www.geeksforgeeks.org/mobile-computing/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Android Development Course",
        "url": "https://www.coursera.org/learn/android-app-development",
        "resource_type": "Course"
      },
      {
        "resource_title": "Mobile App Video Tutorial",
        "url": "https://www.youtube.com/watch?v=fis1TE-KIbs",
        "resource_type": "Video"
      },
      {
        "resource_title": "Mobile Testing",
        "url": "https://www.browserstack.com/guide/mobile-testing",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Mobile UI Design",
        "url": "https://www.interaction-design.org/literature/topics/mobile-ui-design",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Mobile App Layout,Design a basic Android layout XML file for a to-do list app with a text input and button.,Beginner",
        "problem_description": "A renderable layout in Android Studio",
        "difficulty": "- Use LinearLayout and EditText.",
        "hints": NaN
      },
      {
        "problem_title": "Mobile Notification System,Create a Kotlin app to send a notification when a button is clicked.,Intermediate",
        "problem_description": "A notification on button press",
        "difficulty": "- Use NotificationManager.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "118",
    "title": "Quantum Computing",
    "description": "\"Basics of quantum algorithms and qubits\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum",
      " qubits",
      " superposition\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Computing Intro",
        "url": "https://www.ibm.com/quantum-computing/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Tutorial",
        "url": "https://qiskit.org/documentation/tutorials.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Video Lecture",
        "url": "https://www.youtube.com/watch?v=JhHMJCUmq28",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Hardware",
        "url": "https://www.ibm.com/quantum/hardware",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Programming",
        "url": "https://qiskit.org/textbook/ch-prerequisites/index.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Circuit Builder,Write a Python script using Qiskit to create a simple quantum circuit with one qubit and measure it.,Intermediate",
        "problem_description": "Console output: measurement result (0 or 1)",
        "difficulty": "- Use QuantumCircuit and execute on a simulator.",
        "hints": NaN
      },
      {
        "problem_title": "Quantum Phase Estimator,Implement a quantum phase estimation algorithm in Python with Qiskit.,Advanced",
        "problem_description": "Console output: estimated phase",
        "difficulty": "- Use QPE circuit.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "119",
    "title": "Blockchain Technology",
    "description": "\"Fundamentals of blockchain and cryptocurrencies\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"blockchain",
      " crypto",
      " smart contracts\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Blockchain Basics",
        "url": "https://www.investopedia.com/terms/b/blockchain.asp",
        "resource_type": "Article"
      },
      {
        "resource_title": "Ethereum Tutorial",
        "url": "https://www.tutorialspoint.com/ethereum/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Blockchain Course",
        "url": "https://www.coursera.org/learn/cryptocurrency",
        "resource_type": "Course"
      },
      {
        "resource_title": "Blockchain Development",
        "url": "https://www.trufflesuite.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Blockchain Security",
        "url": "https://www.investopedia.com/terms/b/blockchain-security.asp",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Blockchain Transaction Log,Build a Python script to simulate a blockchain by logging 3 transactions in a list with timestamps.,Intermediate",
        "problem_description": "Console output: list of transactions with times",
        "difficulty": "- Use datetime.now() for timestamps.",
        "hints": NaN
      },
      {
        "problem_title": "Smart Contract Simulator,Create a Python script to simulate a smart contract for a voting system with 3 votes.,Intermediate",
        "problem_description": "Console output: vote tally",
        "difficulty": "- Use a dictionary for votes.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "120",
    "title": "Computer Graphics",
    "description": "\"Principles of rendering and 3D modeling\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"graphics",
      " OpenGL",
      " rendering\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computer Graphics Fundamentals",
        "url": "https://www.scratchapixel.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "OpenGL Tutorial",
        "url": "https://learnopengl.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Graphics Video Series",
        "url": "https://www.youtube.com/watch?v=0fK8k7vXJ1o",
        "resource_type": "Video"
      },
      {
        "resource_title": "Graphics Shader Tutorial",
        "url": "https://www.khronos.org/opengl/wiki/Shader_Tutorial",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Graphics Shaders",
        "url": "https://www.khronos.org/opengl/wiki/Shader_Tutorial",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Graphics Shader Effect,Create a basic OpenGL shader (vertex + fragment) to apply a color gradient to a triangle.,Advanced",
        "problem_description": "A rendered triangle with gradient",
        "difficulty": "- Use GLSL and glShaderSource.",
        "hints": NaN
      },
      {
        "problem_title": "3D Model Renderer,Write a Python script using Pygame to render a rotating 3D cube.,Advanced",
        "problem_description": "A window with rotating cube",
        "difficulty": "- Use PyOpenGL and rotation matrices.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "121",
    "title": "Human-Computer Interaction",
    "description": "Design of user-friendly interfaces",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"HCI",
      " UX",
      " usability\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Human-Computer Interaction",
        "url": "https://www.interaction-design.org/literature/topics/human-computer-interaction",
        "resource_type": "Article"
      },
      {
        "resource_title": "UX Design Course",
        "url": "https://www.coursera.org/learn/user-experience-design",
        "resource_type": "Course"
      },
      {
        "resource_title": "HCI Video Tutorial",
        "url": "https://www.youtube.com/watch?v=3a5Xq2wV9m8",
        "resource_type": "Video"
      },
      {
        "resource_title": "HCI Research",
        "url": "https://www.interaction-design.org/literature",
        "resource_type": "Article"
      },
      {
        "resource_title": "HCI Principles",
        "url": "https://www.nngroup.com/articles/hci/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "HCI Form Design,Design an HTML form for user feedback with CSS styling for usability (e.g., large buttons).,Intermediate,A webpage with styled",
        "problem_description": " accessible form",
        "difficulty": "- Use CSS for button size and padding.",
        "hints": NaN
      },
      {
        "problem_title": "Usability Test Script,Create a Python script to log user interactions with a webpage form (e.g., 5 clicks).,Intermediate",
        "problem_description": "Console output: interaction log",
        "difficulty": "- Use pynput for mouse tracking.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "122",
    "title": "Distributed Systems",
    "description": "Concepts of distributed computing",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"distributed",
      " consensus",
      " scalability\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Distributed Systems Guide",
        "url": "https://www.geeksforgeeks.org/distributed-system/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Distributed Computing Tutorial",
        "url": "https://www.tutorialspoint.com/distributed_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Distributed Systems Video",
        "url": "https://www.youtube.com/watch?v=8yY4sR4Z3pM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Distributed Algorithms",
        "url": "https://www.distributedcomputing.info/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Distributed Consensus",
        "url": "https://raft.github.io/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Distributed Key-Value Store,Implement a Python program to simulate a distributed key-value store with 3 nodes.,Advanced",
        "problem_description": "Console output: key-value pairs across nodes",
        "difficulty": "- Use dictionaries and simulate node communication.",
        "hints": NaN
      },
      {
        "problem_title": "Distributed Consensus,Write a Python script to simulate a Raft consensus algorithm with 3 nodes.,Advanced",
        "problem_description": "Console output: \"Leader elected\"",
        "difficulty": "- Use a simple state machine.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "123",
    "title": "Robotics",
    "description": "Introduction to robotic systems and control",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"robotics",
      " control",
      " sensors\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Robotics Basics",
        "url": "https://www.khanacademy.org/computing/computer-programming/robotics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Robot Programming Tutorial",
        "url": "https://www.ros.org/tutorials/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Robotics Video Series",
        "url": "https://www.youtube.com/watch?v=6qK__G5l6c8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Robotics Kits",
        "url": "https://www.sparkfun.com/categories/50",
        "resource_type": "Article"
      },
      {
        "resource_title": "Robotics Control Systems",
        "url": "https://www.mathworks.com/help/robotics/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Robotics Arm Simulator,Write a Python script to simulate a robotic arm\u2019s movement (e.g., rotate 90 degrees) using coordinates.,Intermediate,Console output: \"Arm at (10",
        "problem_description": " 20)\"",
        "difficulty": "- Use a simple coordinate system.",
        "hints": NaN
      },
      {
        "problem_title": "Robot Path Planner,Design a Python script to plan a path for a robot avoiding 3 obstacles.,Intermediate",
        "problem_description": "Console output: \"Path found\"",
        "difficulty": "- Use A* algorithm.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "124",
    "title": "Natural Language Processing",
    "description": "Techniques for language understanding",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"NLP",
      " sentiment",
      " tokenization\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Natural Language Processing",
        "url": "https://www.nltk.org/book/",
        "resource_type": "Book"
      },
      {
        "resource_title": "NLP Tutorial",
        "url": "https://www.tutorialspoint.com/natural_language_processing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "NLP Video Lecture",
        "url": "https://www.youtube.com/watch?v=RLW4S4q2lHM",
        "resource_type": "Video"
      },
      {
        "resource_title": "NLP Datasets",
        "url": "https://www.nltk.org/data.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "NLP Sentiment Analysis",
        "url": "https://www.nltk.org/api/nltk.sentiment.html",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "NLP Text Analyzer,Create a Python script using NLTK to count word frequency in a 50-word text sample.,Intermediate,Console output: \"Word: the",
        "problem_description": " Count: 5\"",
        "difficulty": "- Use nltk.FreqDist and a sample string.",
        "hints": NaN
      },
      {
        "problem_title": "Sentiment Analyzer,Build a Python script using TextBlob to analyze sentiment of a 10-sentence text.,Intermediate",
        "problem_description": "Console output: \"Sentiment: Positive\"",
        "difficulty": "- Use TextBlob\u2019s sentiment.polarity.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "125",
    "title": "Computer Vision",
    "description": "Image processing and object recognition",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"vision",
      " OpenCV",
      " recognition\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computer Vision Intro",
        "url": "https://opencv.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "OpenCV Tutorial",
        "url": "https://docs.opencv.org/master/d6/d00/tutorial_py_root.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Vision Video Series",
        "url": "https://www.youtube.com/watch?v=oXlwWbU8l2o",
        "resource_type": "Video"
      },
      {
        "resource_title": "Vision Processing",
        "url": "https://www.pyimagesearch.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Computer Vision Course",
        "url": "https://www.coursera.org/learn/computer-vision-basics",
        "resource_type": "Course"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Vision Edge Detector,Build a Python script using OpenCV to detect edges in a grayscale image (e.g., a 100x100 pixel image).,Intermediate",
        "problem_description": "Output image with edges highlighted",
        "difficulty": "- Use cv2.Canny() and imread().",
        "hints": NaN
      },
      {
        "problem_title": "Face Detection System,Create a Python script using OpenCV to detect faces in a photo.,Intermediate",
        "problem_description": "Output image with face rectangles",
        "difficulty": "- Use cv2.CascadeClassifier.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "126",
    "title": "Software Testing",
    "description": "Methods for ensuring software quality",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"testing",
      " QA",
      " automation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Testing Guide",
        "url": "https://www.guru99.com/software-testing-introduction.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Testing Tutorial",
        "url": "https://www.tutorialspoint.com/software_testing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Testing Video Course",
        "url": "https://www.youtube.com/watch?v=8X2R82rP_Gw",
        "resource_type": "Video"
      },
      {
        "resource_title": "Testing Automation",
        "url": "https://www.jenkins.io/doc/tutorials/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Testing Frameworks",
        "url": "https://www.selenium.dev/documentation/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Test Automation Script,Write a Python script using Selenium to automate logging into a test website with credentials.,Intermediate",
        "problem_description": "Console output: \"Login successful\"",
        "difficulty": "- Use WebDriver and find_element().",
        "hints": NaN
      },
      {
        "problem_title": "UI Test Recorder,Build a Python script to record UI interactions on a webpage using Selenium.,Intermediate",
        "problem_description": "Console output: interaction log",
        "difficulty": "- Use ActionChains.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "127",
    "title": "DevOps Practices",
    "description": "Integration of development and operations",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"DevOps",
      " CI/CD",
      " automation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "DevOps Basics",
        "url": "https://www.atlassian.com/devops",
        "resource_type": "Article"
      },
      {
        "resource_title": "DevOps Tutorial",
        "url": "https://www.tutorialspoint.com/devops/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "DevOps Video Series",
        "url": "https://www.youtube.com/watch?v=5Vq3sA3j9sA",
        "resource_type": "Video"
      },
      {
        "resource_title": "DevOps Tools",
        "url": "https://www.docker.com/resources/what-container",
        "resource_type": "Article"
      },
      {
        "resource_title": "DevOps Pipeline Tutorial",
        "url": "https://www.jenkins.io/doc/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "DevOps Pipeline Script,Create a Bash script to automate building a simple C program and running it.,Beginner",
        "problem_description": "Console output: compiled program output",
        "difficulty": "- Use gcc and ./executable.",
        "hints": NaN
      },
      {
        "problem_title": "CI/CD Config File,Write a YAML file for a GitHub Actions workflow to build and test a Python app.,Intermediate",
        "problem_description": "Workflow runs successfully",
        "difficulty": "- Use jobs and steps.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "128",
    "title": "Game Development",
    "description": "Fundamentals of game design and engines",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"games",
      " Unity",
      " physics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Game Development Intro",
        "url": "https://www.gamedevelopment.tutsplus.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Unity Tutorial",
        "url": "https://learn.unity.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Game Dev Video",
        "url": "https://www.youtube.com/watch?v=wc8gC7zPgCI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Game Design Theory",
        "url": "https://www.gamasutra.com/topic/game-design",
        "resource_type": "Article"
      },
      {
        "resource_title": "Game Physics Tutorial",
        "url": "https://www.gamasutra.com/topic/physics",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Game Level Designer,Design a 2D game level in Unity with 3 platforms and a player object using C# scripting.,Intermediate",
        "problem_description": "A playable level in Unity editor",
        "difficulty": "- Use GameObject and Transform.",
        "hints": NaN
      },
      {
        "problem_title": "Game Physics Engine,Create a Unity C# script to simulate gravity affecting a falling object.,Intermediate",
        "problem_description": "A falling object in Unity",
        "difficulty": "- Use Rigidbody and AddForce.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "129",
    "title": "Embedded Systems",
    "description": "Programming for embedded devices",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"embedded",
      " microcontrollers",
      " IoT\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Embedded Systems Guide",
        "url": "https://www.embedded.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Embedded Tutorial",
        "url": "https://www.tutorialspoint.com/embedded_systems/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Embedded Video Lecture",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      },
      {
        "resource_title": "Embedded Debugging",
        "url": "https://www.segger.com/products/debug-probes/j-link/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Embedded C Guide",
        "url": "https://www.embedded.com/design/prototyping-and-development/4006438/Introduction-to-embedded-C",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Embedded LED Controller,Write an Arduino sketch to blink an LED connected to pin 13 at 1-second intervals.,Beginner",
        "problem_description": "LED blinks every second",
        "difficulty": "- Use digitalWrite and delay(1000).",
        "hints": NaN
      },
      {
        "problem_title": "Sensor Data Logger,Build an Arduino sketch to read a temperature sensor and log to Serial every 2 seconds.,Intermediate",
        "problem_description": "Serial output: \"Temp: 25\u00b0C\"",
        "difficulty": "- Use analogRead and delay().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "130",
    "title": "Big Data Analytics",
    "description": "Handling and analyzing large datasets",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"big data",
      " Hadoop",
      " analytics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Big Data Basics",
        "url": "https://www.datacamp.com/community/tutorials/big-data-tutorial",
        "resource_type": "Article"
      },
      {
        "resource_title": "Hadoop Tutorial",
        "url": "https://www.tutorialspoint.com/hadoop/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Big Data Video",
        "url": "https://www.youtube.com/watch?v=7o3u1wl2IG4",
        "resource_type": "Video"
      },
      {
        "resource_title": "Big Data Frameworks",
        "url": "https://hadoop.apache.org/docs/stable/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Big Data with Spark",
        "url": "https://spark.apache.org/docs/latest/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Big Data Aggregator,Create a Python script to aggregate data from a 1000-row CSV file using Pandas.,Intermediate",
        "problem_description": "Console output: aggregated sum",
        "difficulty": "- Use pd.read_csv() and groupby().",
        "hints": NaN
      },
      {
        "problem_title": "Data Stream Processor,Write a Python script to process a real-time data stream with 100 updates using Kafka.,Advanced",
        "problem_description": "Console output: processed stream",
        "difficulty": "- Use kafka-python library.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "131",
    "title": "Augmented Reality",
    "description": "Basics of AR technology and applications",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"AR",
      " Unity",
      " overlays\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Augmented Reality Intro",
        "url": "https://www.arpost.co/2020/08/14/what-is-augmented-reality/",
        "resource_type": "Article"
      },
      {
        "resource_title": "AR Development Tutorial",
        "url": "https://www.tutorialspoint.com/augmented_reality/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "AR Video Series",
        "url": "https://www.youtube.com/watch?v=5o9WjB1vO7w",
        "resource_type": "Video"
      },
      {
        "resource_title": "AR Development Tools",
        "url": "https://developers.google.com/ar/develop",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "AR SDK Tutorial",
        "url": "https://developers.google.com/ar",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "AR Object Placer,Build an AR application using ARCore to place a 3D cube in the real world, viewable on Android.,Advanced",
        "problem_description": "A rendered 3D cube in AR view",
        "difficulty": "- Use Sceneform and ARFragment.",
        "hints": NaN
      },
      {
        "problem_title": "AR Navigation Marker,Create an ARCore app to display navigation arrows based on user location.,Advanced",
        "problem_description": "AR view with arrows",
        "difficulty": "- Use ARAnchor and geolocation.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "132",
    "title": "Virtual Reality",
    "description": "Fundamentals of VR development",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"VR",
      " Oculus",
      " immersion\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Virtual Reality Basics",
        "url": "https://www.vrs.org.uk/virtual-reality-basics/",
        "resource_type": "Article"
      },
      {
        "resource_title": "VR Development with Unity",
        "url": "https://learn.unity.com/course/create-with-vr",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "VR Video Tutorial",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "VR Design Principles",
        "url": "https://www.vrguru.com/design-principles/",
        "resource_type": "Article"
      },
      {
        "resource_title": "VR Interaction Design",
        "url": "https://www.vrchat.com/docs",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "VR Room Simulator,Design a VR scene in Unity with a room and interactive door using C# scripting.,Intermediate",
        "problem_description": "A VR room with openable door",
        "difficulty": "- Use VR SDK and collider.",
        "hints": NaN
      },
      {
        "problem_title": "VR Multiplayer Lobby,Build a Unity C# script for a VR multiplayer lobby with 2 players.,Advanced",
        "problem_description": "VR lobby with players",
        "difficulty": "- Use Photon or Mirror networking.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "133",
    "title": "Machine Learning Algorithms",
    "description": "In-depth study of ML techniques",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"ML",
      " regression",
      " classification\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Machine Learning Algorithms",
        "url": "https://www.coursera.org/learn/machine-learning",
        "resource_type": "Course"
      },
      {
        "resource_title": "ML with Python Tutorial",
        "url": "https://www.datacamp.com/community/tutorials/machine-learning-python",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "ML Video Lecture",
        "url": "https://www.youtube.com/watch?v=PkZNo7MFNFg",
        "resource_type": "Video"
      },
      {
        "resource_title": "ML Frameworks",
        "url": "https://scikit-learn.org/stable/",
        "resource_type": "Article"
      },
      {
        "resource_title": "ML Deep Dive",
        "url": "https://www.deeplearning.ai/the-batch/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "ML Prediction Model,Train a simple scikit-learn model in Python to predict house prices with 10 sample data points.,Intermediate,Console output: predicted price (e.g.",
        "problem_description": " 300k)",
        "difficulty": "- Use LinearRegression and fit().",
        "hints": NaN
      },
      {
        "problem_title": "ML Hyperparameter Tune,Write a Python script to tune hyperparameters for a scikit-learn model using GridSearchCV.,Advanced",
        "problem_description": "Console output: best parameters",
        "difficulty": "- Use GridSearchCV.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "134",
    "title": "Cryptology",
    "description": "Principles of encryption and decryption",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"cryptology",
      " ciphers",
      " security\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cryptology Fundamentals",
        "url": "https://www.crypto-textbook.com/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Cipher Tutorial",
        "url": "https://www.geeksforgeeks.org/caesar-cipher/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Cryptology Video",
        "url": "https://www.youtube.com/watch?v=9T0C3jnxImA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Cryptology History",
        "url": "https://www.britannica.com/technology/cryptology",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cryptology Standards",
        "url": "https://csrc.nist.gov/publications/detail/sp/800-57pt1/rev-5/final",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cryptology Encoder,Write a Python script to implement a Caesar cipher with a shift of 3 on a 10-character text.,Beginner",
        "problem_description": "Console output: \"abc\" \u2192 \"def\"",
        "difficulty": "- Use string offset with modulo 26.",
        "hints": NaN
      },
      {
        "problem_title": "Vigenere Cipher Tool,Create a Python script to encrypt a message using the Vigenere cipher with a keyword.,Intermediate",
        "problem_description": "Console output: encrypted text",
        "difficulty": "- Use a repeating key.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "135",
    "title": "Data Mining",
    "description": "Techniques for extracting data patterns",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"data mining",
      " clustering",
      " patterns\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Mining Basics",
        "url": "https://www.tutorialspoint.com/data_mining/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Clustering Tutorial",
        "url": "https://www.javatpoint.com/clustering-in-data-mining",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Data Mining Video",
        "url": "https://www.youtube.com/watch?v=0vL4Zv2xN8c",
        "resource_type": "Video"
      },
      {
        "resource_title": "Data Mining Software",
        "url": "https://www.oracle.com/data-mining/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Data Mining Tools",
        "url": "https://www.knime.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Data Mining Classifier,Create a Python script using scikit-learn to classify 20 data points into two classes.,Intermediate,Console output: accuracy score (e.g.",
        "problem_description": " 0.85)",
        "difficulty": "- Use DecisionTreeClassifier.",
        "hints": NaN
      },
      {
        "problem_title": "Cluster Analyzer,Write a Python script to perform k-means clustering on a 50-point dataset.,Intermediate",
        "problem_description": "Console output: cluster centers",
        "difficulty": "- Use KMeans from sklearn.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "136",
    "title": "Web Security",
    "description": "Protecting web applications",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"security",
      " XSS",
      " SQL injection\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Web Security Guide",
        "url": "https://owasp.org/www-project-top-ten/",
        "resource_type": "Article"
      },
      {
        "resource_title": "XSS Prevention Tutorial",
        "url": "https://www.acunetix.com/blog/articles/preventing-xss-cross-site-scripting/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Security Video Course",
        "url": "https://www.youtube.com/watch?v=qbql1oX4EQI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Web Security Standards",
        "url": "https://www.w3.org/Security/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Web Security Tools",
        "url": "https://www.owasp.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Web Security Filter,Build a PHP script to filter out XSS attacks from a user input form.,Intermediate",
        "problem_description": "Console output: \"Safe input: hello\"",
        "difficulty": "- Use htmlspecialchars().",
        "hints": NaN
      },
      {
        "problem_title": "CSRF Protection,Design a PHP script to implement CSRF token validation for a form submission.,Intermediate",
        "problem_description": "Console output: \"Token valid\"",
        "difficulty": "- Use session for token.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "137",
    "title": "Systems Programming",
    "description": "Low-level programming techniques",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"systems",
      " C",
      " assembly\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Systems Programming Intro",
        "url": "https://www.tutorialspoint.com/assembly_programming/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "C Programming Tutorial",
        "url": "https://www.w3schools.com/c/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Systems Video Lecture",
        "url": "https://www.youtube.com/watch?v=6F5g3nW8p_Q",
        "resource_type": "Video"
      },
      {
        "resource_title": "Systems Performance",
        "url": "https://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Systems Assembly Guide",
        "url": "https://www.tutorialspoint.com/assembly_programming/assembly_basic_syntax.htm",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Systems Load Monitor,Write a C program to monitor system CPU usage and print it every 5 seconds.,Intermediate",
        "problem_description": "Console output: \"CPU: 20%\"",
        "difficulty": "- Use system calls like getloadavg().",
        "hints": NaN
      },
      {
        "problem_title": "Memory Usage Tracker,Create a C program to track memory usage and print it every 10 seconds.,Intermediate",
        "problem_description": "Console output: \"Memory: 50%\"",
        "difficulty": "- Use getrusage().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "138",
    "title": "Automata Theory",
    "description": "Study of computational models",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"automata",
      " FSM",
      " Turing\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Automata Theory Basics",
        "url": "https://www.javatpoint.com/automata-tutorial",
        "resource_type": "Article"
      },
      {
        "resource_title": "FSM Tutorial",
        "url": "https://www.tutorialspoint.com/automata_theory/finite_automata_introduction.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Automata Video",
        "url": "https://www.youtube.com/watch?v=5-7dK3c-3BE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Automata Visualization",
        "url": "https://www.jflap.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Automata Course",
        "url": "https://www.coursera.org/learn/automata",
        "resource_type": "Course"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Automata State Machine,Design a Python program to simulate a finite state machine with 3 states for a light switch.,Intermediate",
        "problem_description": "Console output: \"State: On\"",
        "difficulty": "- Use a state dictionary.",
        "hints": NaN
      },
      {
        "problem_title": "Regular Expression Parser,Write a Python script to convert a regular expression to a finite automaton.,Advanced",
        "problem_description": "Console output: state transitions",
        "difficulty": "- Use a state table.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "139",
    "title": "Information Retrieval",
    "description": "Techniques for searching data",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"retrieval",
      " indexing",
      " search\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Information Retrieval Guide",
        "url": "https://nlp.stanford.edu/IR-book/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Search Engine Tutorial",
        "url": "https://www.geeksforgeeks.org/search-algorithms/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "IR Video Lecture",
        "url": "https://www.youtube.com/watch?v=9J6IYI9e1-x",
        "resource_type": "Video"
      },
      {
        "resource_title": "IR Search Engines",
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "IR Indexing Tutorial",
        "url": "https://www.searchtools.com/info/data-mining/indexing.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "IR Search Engine,Create a Python script to build a simple in-memory search engine for 10 documents.,Intermediate",
        "problem_description": "Console output: matching document IDs",
        "difficulty": "- Use a dictionary and keyword search.",
        "hints": NaN
      },
      {
        "problem_title": "Index Builder,Design a Python script to build an inverted index for 20 text documents.,Intermediate",
        "problem_description": "Console output: index dictionary",
        "difficulty": "- Use a defaultdict.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "140",
    "title": "Computer Architecture",
    "description": "Design of hardware systems",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"architecture",
      " CPU",
      " memory\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computer Architecture Basics",
        "url": "https://www.tutorialspoint.com/computer_logical_organization/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "CPU Design Tutorial",
        "url": "https://www.geeksforgeeks.org/computer-organization-and-architecture/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Architecture Video",
        "url": "https://www.youtube.com/watch?v=W4lP1iZ2KkM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Architecture Design",
        "url": "https://www.tutorialspoint.com/computer_architecture/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Architecture Pipelining",
        "url": "https://www.tutorialspoint.com/computer_architecture/pipelining.htm",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Architecture Pipeline Simulator,Write a Python script to simulate a 3-stage CPU pipeline (fetch, decode, execute).,Advanced",
        "problem_description": "Console output: \"Pipeline completed\"",
        "difficulty": "- Use lists to track stages.",
        "hints": NaN
      },
      {
        "problem_title": "Cache Simulator,Create a Python script to simulate a direct-mapped cache with 4 blocks.,Advanced",
        "problem_description": "Console output: hit/miss stats",
        "difficulty": "- Use a dictionary for cache.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "141",
    "title": "Programming Languages",
    "description": "Study of language design",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"languages",
      " syntax",
      " semantics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Programming Languages Intro",
        "url": "https://www.tutorialspoint.com/compiler_design/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Language Design Tutorial",
        "url": "https://www.javatpoint.com/compiler-design-phases",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "PL Video Series",
        "url": "https://www.youtube.com/watch?v=1j4mCIpVu_g",
        "resource_type": "Video"
      },
      {
        "resource_title": "Language Parsing",
        "url": "https://www.antlr.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Language Syntax Guide",
        "url": "https://www.w3.org/standards/techs/grammar",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Language Parser,Build a Python script to parse a simple arithmetic expression (e.g., \"2 + 3\") into a tree.,Advanced",
        "problem_description": "Console output: tree structure",
        "difficulty": "- Use recursive descent parsing.",
        "hints": NaN
      },
      {
        "problem_title": "Syntax Highlighter,Write a Python script to highlight syntax for a custom language (e.g., \"if x\").,Advanced",
        "problem_description": "Console output: colored text",
        "difficulty": "- Use regex and colorama.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "142",
    "title": "Database Security",
    "description": "Securing database systems",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"DB security",
      " encryption",
      " access\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Database Security Guide",
        "url": "https://www.geeksforgeeks.org/database-security/",
        "resource_type": "Article"
      },
      {
        "resource_title": "SQL Security Tutorial",
        "url": "https://www.postgresqltutorial.com/postgresql-security/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "DB Security Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "DB Backup Strategies",
        "url": "https://www.postgresql.org/docs/current/backup.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "DB Encryption Tutorial",
        "url": "https://www.oracle.com/security/database-security.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Database Backup Script,Create a SQL script to back up a table into a new table with a timestamp.,Intermediate",
        "problem_description": "New table with data",
        "difficulty": "- Use CREATE TABLE AS and CURRENT_TIMESTAMP.",
        "hints": NaN
      },
      {
        "problem_title": "Transaction Logger,Write a SQL script to log all insert operations with timestamps.,Intermediate",
        "problem_description": "Log table with entries",
        "difficulty": "- Use triggers.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "143",
    "title": "Network Security",
    "description": "Protecting network infrastructure",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"network security",
      " firewalls",
      " VPN\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Network Security Basics",
        "url": "https://www.tutorialspoint.com/network_security/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Firewall Tutorial",
        "url": "https://www.geeksforgeeks.org/introduction-of-firewall-in-computer-network/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Network Security Video",
        "url": "https://www.youtube.com/watch?v=6tNs3r2yR9Q",
        "resource_type": "Video"
      },
      {
        "resource_title": "Network Monitoring",
        "url": "https://www.wireshark.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Network VPN Guide",
        "url": "https://www.tutorialspoint.com/vpn/index.htm",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Network Traffic Analyzer,Write a Python script to simulate network traffic analysis using a 10-packet log.,Intermediate",
        "problem_description": "Console output: \"Average packets: 5/s\"",
        "difficulty": "- Use a list and mean calculation.",
        "hints": NaN
      },
      {
        "problem_title": "Firewall Rule Simulator,Create a Python script to simulate a firewall filtering 10 packets by port.,Intermediate",
        "problem_description": "Console output: \"Allowed: 5\"",
        "difficulty": "- Use if-else for rules.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "144",
    "title": "Software Architecture",
    "description": "Designing scalable systems",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"architecture",
      " microservices",
      " design\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Architecture Guide",
        "url": "https://www.oreilly.com/library/view/software-architecture-patterns/9781491971437/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Microservices Tutorial",
        "url": "https://www.nginx.com/blog/introduction-to-microservices/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Arch Video Lecture",
        "url": "https://www.youtube.com/watch?v=2t1FZ4i5_KA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Architecture Patterns",
        "url": "https://microservices.io/patterns/index.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Microservices Patterns",
        "url": "https://microservices.io/patterns/index.html",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Architecture Microservice,Design a Python Flask app with two microservices (user, order) communicating via API.,Advanced",
        "problem_description": "API response: {\"user\": \"john\"}",
        "difficulty": "- Use Flask and requests.",
        "hints": NaN
      },
      {
        "problem_title": "Service Mesh Simulator,Build a Python script to simulate a service mesh routing 20 requests.,Advanced",
        "problem_description": "Console output: routing log",
        "difficulty": "- Use a graph structure.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "145",
    "title": "Ethical Hacking",
    "description": "Techniques for penetration testing",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"hacking",
      " pentesting",
      " security\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Ethical Hacking Basics",
        "url": "https://www.kali.org/docs/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Pentesting Tutorial",
        "url": "https://www.tutorialspoint.com/ethical_hacking/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Hacking Video Course",
        "url": "https://www.youtube.com/watch?v=5X7l2N1v1eA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Hacking Challenges",
        "url": "https://www.hackthebox.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Hacking Tools List",
        "url": "https://www.hackingtutorials.org/tools/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Hacking Challenge Solver,Create a Python script to crack a simple substitution cipher with a given key.,Intermediate",
        "problem_description": "Console output: decoded text",
        "difficulty": "- Use a dictionary for mapping.",
        "hints": NaN
      },
      {
        "problem_title": "Port Scanner,Write a Python script to scan 10 common ports on localhost.,Intermediate",
        "problem_description": "Console output: open ports",
        "difficulty": "- Use socket.create_connection().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "146",
    "title": "Data Compression",
    "description": "Methods for reducing data size",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"compression",
      " Huffman",
      " lossless\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Compression Guide",
        "url": "https://www.tutorialspoint.com/data_compression/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Huffman Coding Tutorial",
        "url": "https://www.geeksforgeeks.org/huffman-coding-greedy-algo-3/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Compression Video",
        "url": "https://www.youtube.com/watch?v=JsTptu56GM8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Compression Techniques",
        "url": "https://www.w3schools.com/tags/att_img_src.asp",
        "resource_type": "Article"
      },
      {
        "resource_title": "Compression Algorithms",
        "url": "https://www.huffmancoding.com/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Compression Tool,Write a Python script to compress a 100-character text file using run-length encoding.,Intermediate,Console output: compressed string (e.g.",
        "problem_description": " \"AA\" \u2192 \"A2\")",
        "difficulty": "- Use a loop to count repeats.",
        "hints": NaN
      },
      {
        "problem_title": "Huffman Encoder,Create a Python script to compress text using Huffman coding.,Advanced",
        "problem_description": "Console output: encoded binary",
        "difficulty": "- Use a priority queue for tree.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "147",
    "title": "Quantum Cryptography",
    "description": "Secure communication with quantum",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum crypto",
      " BB84",
      " security\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Cryptography Intro",
        "url": "https://www.nature.com/subjects/quantum-cryptography",
        "resource_type": "Article"
      },
      {
        "resource_title": "BB84 Protocol Tutorial",
        "url": "https://qiskit.org/textbook/ch-algorithms/quantum-key-distribution.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Crypto Video",
        "url": "https://www.youtube.com/watch?v=AQjW7_a5YVM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Security",
        "url": "https://www.nature.com/articles/s41586-020-03081-4",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Key Distribution",
        "url": "https://www.nature.com/articles/s41586-020-03081-4",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Security Protocol,Simulate a BB84 quantum key distribution in Python, generating a 10-bit key.,Advanced",
        "problem_description": "Console output: \"Key: 1010101010\"",
        "difficulty": "- Use random bits and basis selection.",
        "hints": NaN
      },
      {
        "problem_title": "Quantum Key Verifier,Write a Python script to verify a quantum key against eavesdropping.,Advanced",
        "problem_description": "Console output: \"Secure: Yes\"",
        "difficulty": "- Use Qiskit for simulation.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "148",
    "title": "Edge Computing",
    "description": "Processing data at the edge",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"edge",
      " IoT",
      " latency\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Edge Computing Basics",
        "url": "https://www.geeksforgeeks.org/edge-computing/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Edge Tutorial",
        "url": "https://www.tutorialspoint.com/edge_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Edge Video Lecture",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Edge Deployment",
        "url": "https://www.edgeimpulse.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Edge IoT Tutorial",
        "url": "https://www.edgeir.com/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Edge Device Logger,Build a Python script to simulate an edge device logging sensor data to a file every second.,Intermediate",
        "problem_description": "File with timestamped data",
        "difficulty": "- Use with open() and time.sleep().",
        "hints": NaN
      },
      {
        "problem_title": "Edge AI Processor,Create a Python script to process sensor data on an edge device using TensorFlow Lite.,Advanced",
        "problem_description": "Console output: \"Class: motion\"",
        "difficulty": "- Use tflite model.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "149",
    "title": "Mobile Security",
    "description": "Securing mobile applications",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"mobile security",
      " app hardening\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Mobile Security Guide",
        "url": "https://www.owasp.org/index.php/Mobile_Top_10_2016-Top_10",
        "resource_type": "Article"
      },
      {
        "resource_title": "App Hardening Tutorial",
        "url": "https://www.tutorialspoint.com/mobile_security/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Mobile Security Video",
        "url": "https://www.youtube.com/watch?v=8e5zL8x1tYc",
        "resource_type": "Video"
      },
      {
        "resource_title": "Mobile Privacy",
        "url": "https://www.eff.org/issues/mobile-privacy",
        "resource_type": "Article"
      },
      {
        "resource_title": "Mobile App Security",
        "url": "https://www.appsecusa.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Mobile Privacy Checker,Create an Android app to check app permissions and log them to a text file.,Intermediate",
        "problem_description": "File with permission list",
        "difficulty": "- Use ActivityCompat.checkSelfPermission().",
        "hints": NaN
      },
      {
        "problem_title": "Mobile Encryption Tool,Build a Kotlin app to encrypt user input using AES.,Advanced",
        "problem_description": "Console output: encrypted text",
        "difficulty": "- Use Cipher class.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "150",
    "title": "Game AI",
    "description": "AI techniques in game development",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"game AI",
      " pathfinding",
      " behavior\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Game AI Fundamentals",
        "url": "https://www.gamasutra.com/topic/game-ai",
        "resource_type": "Article"
      },
      {
        "resource_title": "Pathfinding Tutorial",
        "url": "https://www.raywenderlich.com/1488-a-guide-to-ai-pathfinding",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Game AI Video",
        "url": "https://www.youtube.com/watch?v=pc_8XgX7YNE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Game AI Tools",
        "url": "https://www.unrealengine.com/en-US/ai",
        "resource_type": "Article"
      },
      {
        "resource_title": "Game AI Pathfinding",
        "url": "https://www.redblobgames.com/pathfinding/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Game AI Pathfinding,Design a Unity C# script for a game character to follow a path using A* algorithm.,Intermediate",
        "problem_description": "A character moving to target",
        "difficulty": "- Use a grid and heuristic function.",
        "hints": NaN
      },
      {
        "problem_title": "AI Behavior Tree,Create a Unity C# script for an enemy AI using a behavior tree.,Advanced",
        "problem_description": "Enemy with patrol/attack",
        "difficulty": "- Use a node-based structure.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "151",
    "title": "Cloud Security",
    "description": "Securing cloud environments",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"cloud security",
      " IAM",
      " encryption\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cloud Security Guide",
        "url": "https://aws.amazon.com/security/",
        "resource_type": "Article"
      },
      {
        "resource_title": "IAM Tutorial",
        "url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Cloud Security Video",
        "url": "https://www.youtube.com/watch?v=5a0g_LEF1lE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Cloud Compliance",
        "url": "https://www.iso.org/standard/54534.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cloud IAM Video",
        "url": "https://www.youtube.com/watch?v=5a0g_LEF1lE",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cloud Compliance Checker,Write a Python script to verify if a cloud config file meets basic GDPR rules (e.g., data retention).,Intermediate",
        "problem_description": "Console output: \"Compliant: Yes\"",
        "difficulty": "- Parse a JSON config.",
        "hints": NaN
      },
      {
        "problem_title": "Cloud Audit Logger,Build a Python script to log cloud API calls for auditing purposes.,Intermediate",
        "problem_description": "Console output: log entries",
        "difficulty": "- Use logging module.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "152",
    "title": "Real-Time Systems",
    "description": "Systems with timing constraints",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"realtime",
      " scheduling",
      " embedded\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Real-Time Systems Intro",
        "url": "https://www.tutorialspoint.com/real_time_systems/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Scheduling Tutorial",
        "url": "https://www.geeksforgeeks.org/real-time-systems/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "RT Video Lecture",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Real-Time OS",
        "url": "https://www.qnx.com/en/industries/automotive/real-time-operating-systems",
        "resource_type": "Article"
      },
      {
        "resource_title": "Real-Time Scheduling",
        "url": "https://www.real-time-systems.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Real-Time Scheduler,Create a C program to simulate a real-time scheduler for 3 tasks with deadlines.,Intermediate",
        "problem_description": "Console output: \"Task 1 completed\"",
        "difficulty": "- Use a priority queue.",
        "hints": NaN
      },
      {
        "problem_title": "RT Task Monitor,Write a C program to monitor real-time task execution times.,Intermediate",
        "problem_description": "Console output: times",
        "difficulty": "- Use clock_gettime().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "153",
    "title": "Bioinformatics",
    "description": "Computational biology techniques",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"bioinformatics",
      " genomics",
      " sequencing\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Bioinformatics Basics",
        "url": "https://www.ncbi.nlm.nih.gov/guide/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Genomics Tutorial",
        "url": "https://www.tutorialspoint.com/bioinformatics/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Bio Video Series",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Bio Tools",
        "url": "https://www.biostars.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Bioinformatics Tools",
        "url": "https://www.ensembl.org/info/docs/tools/index.html",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Bio Sequence Aligner,Write a Python script to align two DNA sequences (e.g., \"ATCG\" and \"ATGG\") using a simple method.,Intermediate",
        "problem_description": "Console output: aligned sequences",
        "difficulty": "- Use a loop for matching.",
        "hints": NaN
      },
      {
        "problem_title": "Genomic Variant Caller,Create a Python script to identify variants in a DNA sequence.,Advanced",
        "problem_description": "Console output: variant list",
        "difficulty": "- Use sequence comparison.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "154",
    "title": "Computer Forensics",
    "description": "Digital evidence analysis",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"forensics",
      " investigation",
      " recovery\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computer Forensics Guide",
        "url": "https://www.sans.org/cyber-security-courses/digital-forensics/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Forensics Tutorial",
        "url": "https://www.tutorialspoint.com/computer_forensics/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Forensics Video",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Forensics Standards",
        "url": "https://www.nist.gov/itl/ssd/digital-forensics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Forensics Techniques",
        "url": "https://www.forensicmag.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Forensics Log Analyzer,Build a Python script to analyze a log file and flag suspicious IP addresses.,Intermediate",
        "problem_description": "Console output: \"Suspicious IP: 192.168.1.1\"",
        "difficulty": "- Use regex for IP detection.",
        "hints": NaN
      },
      {
        "problem_title": "File Recovery Tool,Write a Python script to recover deleted file fragments from a binary dump.,Advanced",
        "problem_description": "Console output: recovered data",
        "difficulty": "- Use binary slicing.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "155",
    "title": "Web Performance",
    "description": "Optimizing web application speed",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"performance",
      " caching",
      " optimization\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Web Performance Basics",
        "url": "https://developers.google.com/web/fundamentals/performance/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Caching Tutorial",
        "url": "https://www.tutorialspoint.com/web_performance/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Performance Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Web Performance Metrics",
        "url": "https://web.dev/learn/performance/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Web Performance Tools",
        "url": "https://www.webpagetest.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Web Performance Optimizer,Create an HTML page with CSS and optimize load time using async scripts.,Intermediate",
        "problem_description": "Page loads in <2s",
        "difficulty": "- Use <script async> and minify CSS.",
        "hints": NaN
      },
      {
        "problem_title": "Page Speed Tester,Build a Python script to measure webpage load time using requests.,Intermediate",
        "problem_description": "Console output: \"Load time: 1.5s\"",
        "difficulty": "- Use time.time().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "156",
    "title": "Neural Networks",
    "description": "Deep learning fundamentals",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"neural nets",
      " deep learning",
      " CNN\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Neural Networks Guide",
        "url": "https://www.deeplearning.ai/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Deep Learning Tutorial",
        "url": "https://www.tutorialspoint.com/deep_learning/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "NN Video Lecture",
        "url": "https://www.youtube.com/watch?v=aircAruvnKk",
        "resource_type": "Video"
      },
      {
        "resource_title": "Neural Networks Tutorial",
        "url": "https://www.tensorflow.org/tutorials/keras",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Neural Networks Book",
        "url": "https://www.deeplearningbook.org/contents/mlp.html",
        "resource_type": "Book"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Neural Network Trainer,Train a simple neural network in Python with TensorFlow on 10 data points for XOR.,Intermediate",
        "problem_description": "Console output: accuracy > 0.9",
        "difficulty": "- Use tf.keras.Sequential.",
        "hints": NaN
      },
      {
        "problem_title": "Deep Learning Model,Create a Python script to train a CNN on a small image dataset using TensorFlow.,Advanced",
        "problem_description": "Console output: accuracy",
        "difficulty": "- Use tf.keras.layers.Conv2D.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "157",
    "title": "Distributed Databases",
    "description": "Distributed data management",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"distributed DB",
      " replication",
      " sharding\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Distributed Databases Intro",
        "url": "https://www.postgresql.org/docs/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Replication Tutorial",
        "url": "https://www.tutorialspoint.com/distributed_database/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "DB Video Series",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Distributed DB Tools",
        "url": "https://www.cockroachlabs.com/docs/stable/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Distributed DB Replication",
        "url": "https://www.mongodb.com/docs/manual/replication/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Distributed DB Replicator,Write a Python script to simulate data replication across 3 database nodes.,Advanced",
        "problem_description": "Console output: \"Data synced\"",
        "difficulty": "- Use lists to mimic nodes.",
        "hints": NaN
      },
      {
        "problem_title": "Sharding Simulator,Build a Python script to simulate database sharding across 4 nodes.,Advanced",
        "problem_description": "Console output: shard distribution",
        "difficulty": "- Use dictionaries.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "158",
    "title": "Quantum Algorithms",
    "description": "Algorithms for quantum computing",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum algorithms",
      " Grover",
      " Shor\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Algorithms Basics",
        "url": "https://qiskit.org/textbook/ch-algorithms/index.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Grover's Algorithm Tutorial",
        "url": "https://www.geeksforgeeks.org/grovers-algorithm/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Video",
        "url": "https://www.youtube.com/watch?v=JUq1Y4B0r5A",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Computing Book",
        "url": "https://www.springer.com/gp/book/9783319042021",
        "resource_type": "Book"
      },
      {
        "resource_title": "Quantum Algorithm Book",
        "url": "https://www.springer.com/gp/book/9783319042021",
        "resource_type": "Book"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Algorithm Simulator,Implement Grover\u2019s algorithm in Python with Qiskit for a 2-qubit system.,Advanced",
        "problem_description": "Console output: amplified state",
        "difficulty": "- Use QuantumCircuit and grover_iteration.",
        "hints": NaN
      },
      {
        "problem_title": "Shor\u2019s Algorithm Demo,Write a Python script to simulate Shor\u2019s algorithm for factoring 15.,Advanced,Console output: factors (3",
        "problem_description": "5)",
        "difficulty": "- Use Qiskit\u2019s shor function.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "159",
    "title": "Software Metrics",
    "description": "Measuring software quality",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"metrics",
      " quality",
      " analysis\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Metrics Guide",
        "url": "https://www.tutorialspoint.com/software_engineering/software_metrics.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quality Metrics Tutorial",
        "url": "https://www.geeksforgeeks.org/software-engineering-software-metrics/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Metrics Video",
        "url": "https://www.youtube.com/watch?v=2t1FZ4i5_KA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Metrics Dashboards",
        "url": "https://www.datadog.com/learn/?category=metrics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Software Metrics Tools",
        "url": "https://www.sonarqube.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Metrics Dashboard,Create a Python script using Matplotlib to plot a line graph of 10 software metrics.,Intermediate",
        "problem_description": "A line graph displayed",
        "difficulty": "- Use plt.plot() and labels.",
        "hints": NaN
      },
      {
        "problem_title": "Metric Alert System,Build a Python script to trigger alerts if a metric exceeds a threshold.,Intermediate",
        "problem_description": "Console output: \"Alert: High\"",
        "difficulty": "- Use if statements.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "160",
    "title": "Internet Protocols",
    "description": "In-depth study of IP and TCP",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"protocols",
      " IP",
      " TCP\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Internet Protocols Intro",
        "url": "https://www.tutorialspoint.com/data_communication_computer_network/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "TCP Tutorial",
        "url": "https://www.geeksforgeeks.org/computer-network-tcp/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Protocols Video",
        "url": "https://www.youtube.com/watch?v=6F5g3nW8p_Q",
        "resource_type": "Video"
      },
      {
        "resource_title": "IP Configuration",
        "url": "https://www.tutorialspoint.com/ipv6/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "IP Addressing Tutorial",
        "url": "https://www.tutorialspoint.com/ipv4/index.htm",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "IP Config Tool,Write a Python script to display the local IP address and subnet mask.,Beginner",
        "problem_description": "Console output: \"IP: 192.168.1.1\"",
        "difficulty": "- Use socket.gethostbyname().",
        "hints": NaN
      },
      {
        "problem_title": "Subnet Calculator,Create a Python script to calculate usable IP addresses in a subnet.,Intermediate",
        "problem_description": "Console output: \"Usable: 254\"",
        "difficulty": "- Use bitwise operations.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "161",
    "title": "Virtualization",
    "description": "Techniques for virtual machines",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"virtualization",
      " VM",
      " hypervisor\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Virtualization Basics",
        "url": "https://www.vmware.com/topics/glossary/content/virtualization.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "VM Tutorial",
        "url": "https://www.tutorialspoint.com/virtualization/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Virtualization Video",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Virtualization Security",
        "url": "https://www.vmware.com/security.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "VMware Virtualization",
        "url": "https://www.vmware.com/support/pubs/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Virtualization Monitor,Build a Python script to list active virtual machines using a library like libvirt.,Intermediate",
        "problem_description": "Console output: VM list",
        "difficulty": "- Install libvirt and use listAllDomains().",
        "hints": NaN
      },
      {
        "problem_title": "VM Snapshot Tool,Write a Python script to simulate taking a snapshot of a virtual machine.,Intermediate",
        "problem_description": "Console output: \"Snapshot saved\"",
        "difficulty": "- Use a mock function.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "162",
    "title": "Autonomous Systems",
    "description": "Self-operating system design",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"autonomous",
      " AI",
      " control\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Autonomous Systems Guide",
        "url": "https://www.ros.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Drone Programming Tutorial",
        "url": "https://www.tutorialspoint.com/drone_programming/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Autonomous Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Autonomous AI",
        "url": "https://www.nvidia.com/en-us/self-driving-cars/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Autonomous Drone Guide",
        "url": "https://www.dji.com/support",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Autonomous Drone Path,Design a Python script to simulate a drone\u2019s path planning with 3 waypoints.,Intermediate,Console output: \"Path: (0,0) to (10",
        "problem_description": "10)\"",
        "difficulty": "- Use a list of coordinates.",
        "hints": NaN
      },
      {
        "problem_title": "Drone Swarm Simulator,Create a Python script to simulate 3 drones coordinating movement.,Advanced",
        "problem_description": "Console output: swarm positions",
        "difficulty": "- Use a list of drone objects.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "163",
    "title": "Data Visualization",
    "description": "Techniques for data representation",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"visualization",
      " D3.js",
      " charts\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Visualization Intro",
        "url": "https://www.tutorialspoint.com/data_visualization/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "D3.js Tutorial",
        "url": "https://www.d3js.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Visualization Video",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Data Viz Tools",
        "url": "https://www.tableau.com/learn/training",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Data Viz with Tableau",
        "url": "https://www.tableau.com/learn/training",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Data Viz Dashboard,Create a JavaScript D3.js visualization of a bar chart with 5 data points.,Intermediate",
        "problem_description": "A webpage with bar chart",
        "difficulty": "- Use d3.select() and data binding.",
        "hints": NaN
      },
      {
        "problem_title": "Interactive Heatmap,Build a JavaScript D3.js heatmap for a 5x5 data grid.,Intermediate",
        "problem_description": "A webpage with heatmap",
        "difficulty": "- Use d3.scaleLinear().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "164",
    "title": "High-Performance Computing",
    "description": "Optimizing for speed and scale",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"HPC",
      " parallel",
      " supercomputing\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "High-Performance Computing",
        "url": "https://www.hpcwire.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Parallel Tutorial",
        "url": "https://www.tutorialspoint.com/high_performance_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "HPC Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "HPC Applications",
        "url": "https://www.hpcwire.com/hpc-applications/",
        "resource_type": "Article"
      },
      {
        "resource_title": "HPC Clusters",
        "url": "https://www.top500.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "HPC Parallel Job,Write a Python script using MPI4PY to parallelize a matrix addition task.,Advanced",
        "problem_description": "Console output: resulting matrix",
        "difficulty": "- Use MPI.COMM_WORLD.",
        "hints": NaN
      },
      {
        "problem_title": "HPC Job Scheduler,Create a Python script to schedule 10 HPC jobs across 4 nodes.,Advanced",
        "problem_description": "Console output: schedule",
        "difficulty": "- Use a priority queue.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "165",
    "title": "Privacy Technologies",
    "description": "Tools for data privacy",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"privacy",
      " anonymization",
      " GDPR\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Privacy Technologies Guide",
        "url": "https://www.dataprotectionreport.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Anonymization Tutorial",
        "url": "https://www.tutorialspoint.com/data_privacy/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Privacy Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Privacy Tools",
        "url": "https://www.privacytools.io/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Privacy Regulations",
        "url": "https://gdpr.eu/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Privacy Data Masker,Build a Python script to mask sensitive data (e.g., \"john@email.com\" \u2192 \"j***@e****.com\").,Intermediate",
        "problem_description": "Console output: masked email",
        "difficulty": "- Use string slicing and replacement.",
        "hints": NaN
      },
      {
        "problem_title": "Anonymization Tool,Write a Python script to anonymize a dataset with 10 records.,Intermediate",
        "problem_description": "Console output: anonymized data",
        "difficulty": "- Use random IDs.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "166",
    "title": "Robotic Process Automation",
    "description": "Automating business processes",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"RPA",
      " bots",
      " workflow\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Robotic Process Automation",
        "url": "https://www.uipath.com/rpa/robotic-process-automation",
        "resource_type": "Article"
      },
      {
        "resource_title": "RPA Tutorial",
        "url": "https://www.tutorialspoint.com/rpa/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "RPA Video",
        "url": "https://www.youtube.com/watch?v=5a0g_LEF1lE",
        "resource_type": "Video"
      },
      {
        "resource_title": "RPA Platforms",
        "url": "https://www.uipath.com/rpa-platform",
        "resource_type": "Article"
      },
      {
        "resource_title": "RPA Automation Tools",
        "url": "https://www.automationanywhere.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "RPA Form Filler,Create a Python script using PyAutoGUI to automate filling a web form with 3 fields.,Intermediate",
        "problem_description": "Form filled on screen",
        "difficulty": "- Use pyautogui.typewrite().",
        "hints": NaN
      },
      {
        "problem_title": "RPA Workflow Designer,Build a Python script to design a multi-step RPA workflow.,Intermediate",
        "problem_description": "Console output: workflow steps",
        "difficulty": "- Use a list of actions.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "167",
    "title": "Quantum Machine Learning",
    "description": "ML with quantum techniques",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum ML",
      " hybrid",
      " algorithms\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Machine Learning",
        "url": "https://pennylane.ai/qml/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum ML Tutorial",
        "url": "https://www.geeksforgeeks.org/quantum-machine-learning/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "QML Video",
        "url": "https://www.youtube.com/watch?v=JUq1Y4B0r5A",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum ML Tools",
        "url": "https://pennylane.ai/qml/tutorials.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum ML Research",
        "url": "https://arxiv.org/abs/2106.04560",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum ML Classifier,Implement a quantum machine learning model in Pennylane to classify 2D points.,Advanced",
        "problem_description": "Console output: prediction accuracy",
        "difficulty": "- Use qml.templates.",
        "hints": NaN
      },
      {
        "problem_title": "QML Data Encoder,Write a Python script to encode classical data into quantum states using Pennylane.,Advanced",
        "problem_description": "Console output: encoded state",
        "difficulty": "- Use qml.qnode.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "168",
    "title": "Green Computing",
    "description": "Eco-friendly computing practices",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"green IT",
      " energy",
      " sustainability\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Green Computing Basics",
        "url": "https://www.energy.gov/eere/femp/green-computing",
        "resource_type": "Article"
      },
      {
        "resource_title": "Energy Efficiency Tutorial",
        "url": "https://www.tutorialspoint.com/green_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Green IT Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Green IT Certifications",
        "url": "https://www.greenbiz.com/article/top-10-green-it-certifications-2025",
        "resource_type": "Article"
      },
      {
        "resource_title": "Green IT Standards",
        "url": "https://www.energystar.gov/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Green IT Calculator,Write a Python script to estimate the carbon footprint of a server running 24/7.,Intermediate,Console output: \"Footprint: 100kg CO2\"",
        "problem_description": "- Use a simple emission rate (e.g.",
        "difficulty": " 0.5kg/kWh).",
        "hints": NaN
      },
      {
        "problem_title": "Energy Usage Tracker,Create a Python script to monitor energy usage of 5 devices.,Intermediate",
        "problem_description": "Console output: \"Total: 200W\"",
        "difficulty": "- Use a loop.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "169",
    "title": "Cloud Architecture",
    "description": "Designing cloud systems",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"cloud arch",
      " scalability",
      " design\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cloud Architecture Guide",
        "url": "https://www.awsarchitectureblog.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cloud Design Tutorial",
        "url": "https://www.tutorialspoint.com/cloud_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Arch Video",
        "url": "https://www.youtube.com/watch?v=2t1FZ4i5_KA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Cloud Resilience",
        "url": "https://www.cloudsecurityalliance.org/research/resilience/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cloud Scalability",
        "url": "https://www.cloudflare.com/learning/cloud/what-is-cloud-scalability/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cloud Resilience Tester,Create a Python script to simulate a cloud service failover with 2 nodes.,Intermediate",
        "problem_description": "Console output: \"Failover successful\"",
        "difficulty": "- Use if-else for node switch.",
        "hints": NaN
      },
      {
        "problem_title": "Cloud Disaster Recovery,Build a Python script to simulate a disaster recovery plan for a cloud app.,Intermediate",
        "problem_description": "Console output: \"Recovered\"",
        "difficulty": "- Use backup data.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "170",
    "title": "Fuzzy Logic",
    "description": "Handling imprecise data",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"fuzzy logic",
      " inference",
      " control\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Fuzzy Logic Intro",
        "url": "https://www.mathworks.com/help/fuzzy/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Fuzzy Tutorial",
        "url": "https://www.tutorialspoint.com/fuzzy_logic/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Fuzzy Video",
        "url": "https://www.youtube.com/watch?v=9T0C3jnxImA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Fuzzy Logic Applications",
        "url": "https://www.mathworks.com/help/fuzzy/fuzzy-inference-system.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Fuzzy Control Tutorial",
        "url": "https://www.mathworks.com/help/fuzzy/examples.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Fuzzy Logic Controller,Design a Python script to implement a fuzzy logic system for a temperature controller.,Intermediate",
        "problem_description": "Console output: \"Temp: Cool\"",
        "difficulty": "- Use if-then rules.",
        "hints": NaN
      },
      {
        "problem_title": "Fuzzy Decision Maker,Write a Python script to make decisions using fuzzy logic for 3 inputs.,Intermediate",
        "problem_description": "Console output: \"Decision: Yes\"",
        "difficulty": "- Use weighted rules.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "171",
    "title": "Peer-to-Peer Networks",
    "description": "Decentralized network design",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"P2P",
      " torrent",
      " overlay\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Peer-to-Peer Networks",
        "url": "https://www.tutorialspoint.com/peer_to_peer/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "P2P Tutorial",
        "url": "https://www.geeksforgeeks.org/peer-to-peer-p2p-networking/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "P2P Video",
        "url": "https://www.youtube.com/watch?v=6F5g3nW8p_Q",
        "resource_type": "Video"
      },
      {
        "resource_title": "P2P Security",
        "url": "https://www.torproject.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "P2P File Sharing",
        "url": "https://www.bittorrent.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "P2P File Sharer,Build a Python script to simulate a P2P file sharing system with 3 peers.,Intermediate",
        "problem_description": "Console output: \"File transferred\"",
        "difficulty": "- Use lists to track peers.",
        "hints": NaN
      },
      {
        "problem_title": "P2P Chat Simulator,Create a Python script to simulate a P2P chat between 3 users.,Intermediate",
        "problem_description": "Console output: chat log",
        "difficulty": "- Use sockets.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "172",
    "title": "Software Verification",
    "description": "Ensuring software correctness",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"verification",
      " formal methods",
      " proof\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Verification Guide",
        "url": "https://www.tutorialspoint.com/software_engineering/software_verification_validation.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Formal Methods Tutorial",
        "url": "https://www.geeksforgeeks.org/software-engineering-formal-methods/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Verification Video",
        "url": "https://www.youtube.com/watch?v=5X7l2N1v1eA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Verification Standards",
        "url": "https://www.iso.org/standard/61488.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Verification Tools",
        "url": "https://www.spinroot.com/spin/whatispin.html",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Verification Test Suite,Write a Python script to verify a function\u2019s output against 5 test cases.,Intermediate",
        "problem_description": "Console output: \"Tests passed: 5\"",
        "difficulty": "- Use assert statements.",
        "hints": NaN
      },
      {
        "problem_title": "Formal Proof Generator,Build a Python script to generate a formal proof for a simple theorem.,Advanced",
        "problem_description": "Console output: proof steps",
        "difficulty": "- Use a rule-based system.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "173",
    "title": "Internet Governance",
    "description": "Rules and policies online",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"governance",
      " ICANN",
      " policy\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Internet Governance Basics",
        "url": "https://www.internetsociety.org/issues/internet-governance/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Governance Tutorial",
        "url": "https://www.tutorialspoint.com/internet_governance/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Governance Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "ICANN Governance",
        "url": "https://www.icann.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Internet Policy",
        "url": "https://www.icann.org/resources/pages/governance-2012-02-25-en",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Internet Policy Analyzer,Create a Python script to parse an internet policy document and count rule occurrences.,Intermediate",
        "problem_description": "Console output: \"Rules: 10\"",
        "difficulty": "- Use regex for rule detection.",
        "hints": NaN
      },
      {
        "problem_title": "Policy Compliance Checker,Write a Python script to check compliance with an internet policy.,Intermediate",
        "problem_description": "Console output: \"Compliant: Yes\"",
        "difficulty": "- Use a checklist.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "174",
    "title": "Quantum Networking",
    "description": "Networking with quantum tech",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum network",
      " entanglement\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Networking Intro",
        "url": "https://www.nature.com/subjects/quantum-networks",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Net Tutorial",
        "url": "https://qiskit.org/documentation/tutorials.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Net Video",
        "url": "https://www.youtube.com/watch?v=AQjW7_a5YVM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Network Tools",
        "url": "https://www.quantum-inspire.com/knowledgebase/networking/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Network Research",
        "url": "https://www.nature.com/articles/s41586-021-03550-2",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Network Simulator,Simulate a quantum network with 3 nodes in Python using Qiskit.,Advanced",
        "problem_description": "Console output: \"Network state: entangled\"",
        "difficulty": "- Use QuantumCircuit for entanglement.",
        "hints": NaN
      },
      {
        "problem_title": "Quantum Router,Design a Python script to route quantum data between 3 nodes.,Advanced",
        "problem_description": "Console output: \"Route established\"",
        "difficulty": "- Use entanglement swapping.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "175",
    "title": "Computational Geometry",
    "description": "Geometric algorithm design",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"geometry",
      " algorithms",
      " shapes\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computational Geometry",
        "url": "https://www.cgal.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Geometry Tutorial",
        "url": "https://www.tutorialspoint.com/computational_geometry/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Geometry Video",
        "url": "https://www.youtube.com/watch?v=JsTptu56GM8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Geometry Software",
        "url": "https://www.geogebra.org/3d",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Geometry Algorithms",
        "url": "https://www.cgal.org/Manual/latest/doc_html/cgal_manual/packages.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Geometry Renderer,Write a Python script using Pygame to draw a triangle with coordinates (0,0), (100,0), (50,100).,Intermediate",
        "problem_description": "A window with a triangle",
        "difficulty": "- Use pygame.draw.polygon().",
        "hints": NaN
      },
      {
        "problem_title": "Collision Detector,Create a Python script to detect collisions between 3 geometric shapes.,Intermediate",
        "problem_description": "Console output: \"Collision\"",
        "difficulty": "- Use distance formulas.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "176",
    "title": "Secure Coding",
    "description": "Writing secure code",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"secure coding",
      " OWASP",
      " vulnerabilities\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Secure Coding Guide",
        "url": "https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/",
        "resource_type": "Article"
      },
      {
        "resource_title": "OWASP Tutorial",
        "url": "https://www.tutorialspoint.com/owasp/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Secure Coding Video",
        "url": "https://www.youtube.com/watch?v=qbql1oX4EQI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Secure Coding Tools",
        "url": "https://www.checkmarx.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "OWASP Secure Coding",
        "url": "https://owasp.org/www-project-secure-coding-practices/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Secure Coding Validator,Build a Java program to check for SQL injection vulnerabilities in a sample query.,Intermediate",
        "problem_description": "Console output: \"Vulnerable: Yes\"",
        "difficulty": "- Use prepared statements.",
        "hints": NaN
      },
      {
        "problem_title": "Input Sanitizer,Write a Java program to sanitize user input against XSS.,Intermediate",
        "problem_description": "Console output: \"Safe input\"",
        "difficulty": "- Use StringEscapeUtils.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "177",
    "title": "Multi-Agent Systems",
    "description": "Cooperative agent behavior",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"multi-agent",
      " AI",
      " coordination\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Multi-Agent Systems",
        "url": "https://www.agent.ai/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Agent Tutorial",
        "url": "https://www.tutorialspoint.com/multi_agent_systems/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Agent Video",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Agent Frameworks",
        "url": "https://www.jason-lang.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Agent Simulation",
        "url": "https://www.anylogic.com/use-of-simulation/multi-agent-modeling/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Agent Behavior Model,Create a Python script to simulate 3 agents moving randomly in a 2D grid.,Intermediate",
        "problem_description": "Console output: agent positions",
        "difficulty": "- Use lists and random moves.",
        "hints": NaN
      },
      {
        "problem_title": "Multi-Agent Coordinator,Design a Python script to coordinate 3 agents for a task.,Intermediate",
        "problem_description": "Console output: \"Task completed\"",
        "difficulty": "- Use message passing.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "178",
    "title": "Data Ethics",
    "description": "Ethical data use principles",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"ethics",
      " data",
      " privacy\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Ethics Guide",
        "url": "https://www.datacamp.com/community/blog/data-ethics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Ethics Tutorial",
        "url": "https://www.tutorialspoint.com/data_ethics/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Ethics Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Ethics Frameworks",
        "url": "https://www.datacamp.com/community/blog/data-ethics-framework",
        "resource_type": "Article"
      },
      {
        "resource_title": "Data Ethics Framework",
        "url": "https://www.datacamp.com/community/blog/data-ethics-framework",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Ethics Impact Assessor,Write a Python script to evaluate the ethical impact of an AI decision (e.g., bias score).,Intermediate",
        "problem_description": "Console output: \"Bias: 0.2\"",
        "difficulty": "- Use a simple scoring system.",
        "hints": NaN
      },
      {
        "problem_title": "Ethics Policy Simulator,Build a Python script to simulate compliance with an AI ethics policy.,Intermediate",
        "problem_description": "Console output: \"Compliant\"",
        "difficulty": "- Use a rule set.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "179",
    "title": "Hardware Security",
    "description": "Protecting hardware devices",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"hardware security",
      " TPM",
      " side-channel\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Hardware Security Basics",
        "url": "https://www.trustedcomputinggroup.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "TPM Tutorial",
        "url": "https://www.tutorialspoint.com/hardware_security/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Hardware Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Hardware Security Modules",
        "url": "https://www.thalesgroup.com/en/markets/digital-identity-and-security/hardware-security-modules-hsm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Hardware TPM Guide",
        "url": "https://trustedcomputinggroup.org/wp-content/uploads/TPM-Main-Part-1-Design-Principles_v1.2_rev116_01032011.pdf",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Hardware Security Checker,Design a Python script to simulate checking a TPM module\u2019s status.,Intermediate",
        "problem_description": "Console output: \"TPM: Enabled\"",
        "difficulty": "- Use a mock function.",
        "hints": NaN
      },
      {
        "problem_title": "Secure Boot Simulator,Create a Python script to simulate a secure boot process.,Intermediate",
        "problem_description": "Console output: \"Boot secure\"",
        "difficulty": "- Use a signature check.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "180",
    "title": "Quantum Error Correction",
    "description": "Error handling in quantum",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum error",
      " codes",
      " correction\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Error Correction",
        "url": "https://www.nature.com/subjects/quantum-error-correction",
        "resource_type": "Article"
      },
      {
        "resource_title": "Error Correction Tutorial",
        "url": "https://qiskit.org/textbook/ch-quantum-hardware/error-correction.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "QEC Video",
        "url": "https://www.youtube.com/watch?v=JUq1Y4B0r5A",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Error Tutorial",
        "url": "https://qiskit.org/textbook/ch-quantum-hardware/error-correction.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Error Codes",
        "url": "https://qiskit.org/textbook/ch-quantum-hardware/error-correction-surface-codes.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Error Corrector,Implement a simple quantum error correction code in Python with Qiskit.,Advanced",
        "problem_description": "Console output: \"Error corrected\"",
        "difficulty": "- Use a 3-qubit code.",
        "hints": NaN
      },
      {
        "problem_title": "QEC Performance Test,Write a Python script to test error correction rates for a quantum code.,Advanced",
        "problem_description": "Console output: \"Rate: 0.95\"",
        "difficulty": "- Use repeated trials.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "181",
    "title": "Augmented Analytics",
    "description": "AI-enhanced data analysis",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"augmented analytics",
      " AI",
      " BI\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Augmented Analytics Intro",
        "url": "https://www.gartner.com/en/information-technology/glossary/augmented-analytics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Analytics Tutorial",
        "url": "https://www.tutorialspoint.com/augmented_analytics/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "AA Video",
        "url": "https://www.youtube.com/watch?v=aircAruvnKk",
        "resource_type": "Video"
      },
      {
        "resource_title": "Augmented Analytics Tools",
        "url": "https://www.tableau.com/solutions/augmented-analytics",
        "resource_type": "Article"
      },
      {
        "resource_title": "Augmented Analytics",
        "url": "https://www.gartner.com/en/information-technology/glossary/augmented-analytics",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Augmented Analytics Tool,Create a Python script using Pandas to generate a summary report from 100 rows of data.,Intermediate",
        "problem_description": "Console output: summary stats",
        "difficulty": "- Use describe() method.",
        "hints": NaN
      },
      {
        "problem_title": "Anomaly Detector,Build a Python script to detect anomalies in a 50-row dataset using Pandas.,Intermediate",
        "problem_description": "Console output: anomalies",
        "difficulty": "- Use z-score method.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "182",
    "title": "Serverless Computing",
    "description": "Event-driven cloud functions",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"serverless",
      " AWS Lambda",
      " FaaS\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Serverless Computing Guide",
        "url": "https://aws.amazon.com/serverless/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Lambda Tutorial",
        "url": "https://www.tutorialspoint.com/serverless_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Serverless Video",
        "url": "https://www.youtube.com/watch?v=5a0g_LEF1lE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Serverless Patterns",
        "url": "https://serverless.com/framework/docs/providers/aws/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Serverless Architecture",
        "url": "https://www.serverless.com/framework/docs/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Serverless Function,Write a Python AWS Lambda function to process a JSON input and return a response.,Intermediate",
        "problem_description": "Lambda output: {\"status\": \"ok\"}",
        "difficulty": "- Use lambda_handler.",
        "hints": NaN
      },
      {
        "problem_title": "Serverless Trigger,Create a Python script to trigger a Lambda function via API Gateway.,Intermediate",
        "problem_description": "Console output: \"Triggered\"",
        "difficulty": "- Use boto3.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "183",
    "title": "Explainable AI",
    "description": "Interpreting AI decisions",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"explainable AI",
      " XAI",
      " transparency\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Explainable AI Basics",
        "url": "https://www.xai.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "XAI Tutorial",
        "url": "https://www.tutorialspoint.com/explainable_ai/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "XAI Video",
        "url": "https://www.youtube.com/watch?v=PkZNo7MFNFg",
        "resource_type": "Video"
      },
      {
        "resource_title": "XAI Frameworks",
        "url": "https://www.lime.ml/",
        "resource_type": "Article"
      },
      {
        "resource_title": "XAI Techniques",
        "url": "https://www.lime.ml/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "XAI Model Explainer,Build a Python script using SHAP to explain a simple ML model\u2019s prediction.,Advanced",
        "problem_description": "Console output: feature importance",
        "difficulty": "- Use shap.Explainer.",
        "hints": NaN
      },
      {
        "problem_title": "XAI Visualization,Write a Python script to visualize SHAP values with Matplotlib.,Advanced",
        "problem_description": "A bar chart of importance",
        "difficulty": "- Use shap.summary_plot().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "184",
    "title": "Blockchain Security",
    "description": "Securing blockchain systems",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"blockchain security",
      " consensus",
      " attacks\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Blockchain Security Guide",
        "url": "https://www.investopedia.com/terms/b/blockchain-security.asp",
        "resource_type": "Article"
      },
      {
        "resource_title": "Consensus Tutorial",
        "url": "https://www.tutorialspoint.com/blockchain_security/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "BC Security Video",
        "url": "https://www.youtube.com/watch?v=9T0C3jnxImA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Blockchain Audits",
        "url": "https://www.certik.com/resources/blockchain-security",
        "resource_type": "Article"
      },
      {
        "resource_title": "Blockchain Consensus",
        "url": "https://www.hyperledger.org/learn/consensus",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Blockchain Auditor,Create a Python script to audit a blockchain log for duplicate transactions.,Intermediate",
        "problem_description": "Console output: \"Duplicates: 2\"",
        "difficulty": "- Use a set for tracking.",
        "hints": NaN
      },
      {
        "problem_title": "Consensus Validator,Build a Python script to validate a blockchain consensus mechanism.,Intermediate",
        "problem_description": "Console output: \"Valid\"",
        "difficulty": "- Use a mock blockchain.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "185",
    "title": "Quantum Simulation",
    "description": "Simulating quantum systems",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum simulation",
      " Qiskit",
      " physics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Simulation Intro",
        "url": "https://www.ibm.com/quantum-computing/learn/what-is-quantum-simulation/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Qiskit Tutorial",
        "url": "https://qiskit.org/documentation/tutorials.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Quantum Sim Video",
        "url": "https://www.youtube.com/watch?v=AQjW7_a5YVM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Simulators",
        "url": "https://www.quantum-inspire.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Sim Tools",
        "url": "https://www.quantum-inspire.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Simulator,Write a Python script using Qiskit to simulate a 2-qubit quantum gate sequence.,Advanced",
        "problem_description": "Console output: state vector",
        "difficulty": "- Use QuantumCircuit.",
        "hints": NaN
      },
      {
        "problem_title": "Qubit Entangler,Create a Python script to entangle 3 qubits using Qiskit.,Advanced",
        "problem_description": "Console output: entangled state",
        "difficulty": "- Use cx gates.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "186",
    "title": "Digital Forensics Tools",
    "description": "Tools for digital investigation",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"forensics tools",
      " analysis",
      " recovery\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Digital Forensics Tools",
        "url": "https://www.sans.org/cyber-security-courses/digital-forensics-tools/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Forensics Tool Tutorial",
        "url": "https://www.tutorialspoint.com/digital_forensics_tools/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "DF Video",
        "url": "https://www.youtube.com/watch?v=7sOa5vX_6yI",
        "resource_type": "Video"
      },
      {
        "resource_title": "Forensics Software",
        "url": "https://www.autopsy.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Forensics Training",
        "url": "https://www.sans.org/cyber-security-courses/digital-forensics-training/",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Forensics File Carver,Build a Python script to extract a hidden file from a binary data sample.,Intermediate",
        "problem_description": "Console output: extracted file",
        "difficulty": "- Use binary slicing.",
        "hints": NaN
      },
      {
        "problem_title": "Metadata Extractor,Write a Python script to extract metadata from a file using a library.,Intermediate",
        "problem_description": "Console output: metadata",
        "difficulty": "- Use exiftool or hachoir.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "187",
    "title": "Network Optimization",
    "description": "Improving network efficiency",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"optimization",
      " routing",
      " QoS\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Network Optimization Guide",
        "url": "https://www.tutorialspoint.com/network_optimization/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Routing Tutorial",
        "url": "https://www.geeksforgeeks.org/computer-network-routing/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Optimization Video",
        "url": "https://www.youtube.com/watch?v=6F5g3nW8p_Q",
        "resource_type": "Video"
      },
      {
        "resource_title": "QoS Standards",
        "url": "https://www.itu.int/rec/T-REC-G.114",
        "resource_type": "Article"
      },
      {
        "resource_title": "QoS Optimization",
        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/qos/configuration/15-mt/qos-15-mt-book/nbar-config.html",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "QoS Traffic Shaper,Design a Python script to simulate QoS by prioritizing 3 traffic types.,Intermediate",
        "problem_description": "Console output: \"Priority: High\"",
        "difficulty": "- Use a priority queue.",
        "hints": NaN
      },
      {
        "problem_title": "Bandwidth Allocator,Create a Python script to allocate bandwidth to 5 users.,Intermediate",
        "problem_description": "Console output: allocation",
        "difficulty": "- Use a weighted system.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "188",
    "title": "Adaptive Systems",
    "description": "Systems that learn and adapt",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"adaptive",
      " ML",
      " control\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Adaptive Systems Intro",
        "url": "https://www.tutorialspoint.com/adaptive_systems/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Adaptive Tutorial",
        "url": "https://www.geeksforgeeks.org/adaptive-systems/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Adaptive Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Adaptive Algorithms",
        "url": "https://www.kdnuggets.com/2020/04/adaptive-learning-algorithms.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Adaptive Learning",
        "url": "https://www.knewton.com/adaptive-learning/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Adaptive Learning Model,Create a Python script to adjust a learning rate based on error feedback.,Intermediate",
        "problem_description": "Console output: \"New rate: 0.01\"",
        "difficulty": "- Use if-else for adjustment.",
        "hints": NaN
      },
      {
        "problem_title": "Adaptive Filter,Write a Python script to implement an adaptive filter for noise reduction.,Intermediate",
        "problem_description": "Console output: filtered signal",
        "difficulty": "- Use a moving average.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "189",
    "title": "Cognitive Computing",
    "description": "Simulating human thought",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"cognitive",
      " AI",
      " reasoning\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Cognitive Computing Guide",
        "url": "https://www.ibm.com/watson",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cognitive Tutorial",
        "url": "https://www.tutorialspoint.com/cognitive_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Cog Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Cognitive Models",
        "url": "https://www.ibm.com/cloud/learn/cognitive-computing",
        "resource_type": "Article"
      },
      {
        "resource_title": "Cognitive API Tutorial",
        "url": "https://www.ibm.com/cloud/watson",
        "resource_type": "Tutorial"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Cognitive Chatbot,Write a Python script to simulate a cognitive chatbot using rule-based responses.,Intermediate",
        "problem_description": "Console output: \"Response: Yes\"",
        "difficulty": "- Use a decision tree.",
        "hints": NaN
      },
      {
        "problem_title": "Cognitive Data Analyzer,Build a Python script to analyze text data with cognitive insights.,Intermediate",
        "problem_description": "Console output: insights",
        "difficulty": "- Use NLP libraries.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "190",
    "title": "Post-Quantum Cryptography",
    "description": "Crypto resistant to quantum",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"post-quantum",
      " lattice",
      " security\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Post-Quantum Cryptography",
        "url": "https://www.nist.gov/programs-projects/post-quantum-cryptography",
        "resource_type": "Article"
      },
      {
        "resource_title": "Lattice Tutorial",
        "url": "https://www.tutorialspoint.com/post_quantum_cryptography/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "PQC Video",
        "url": "https://www.youtube.com/watch?v=9T0C3jnxImA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Post-Quantum Standards",
        "url": "https://csrc.nist.gov/projects/post-quantum-cryptography/round-4-submissions",
        "resource_type": "Article"
      },
      {
        "resource_title": "Post-Quantum Algorithms",
        "url": "https://csrc.nist.gov/projects/post-quantum-cryptography",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Post-Quantum Keygen,Implement a Python script to generate a post-quantum key pair using a library.,Advanced",
        "problem_description": "Console output: \"Key generated\"",
        "difficulty": "- Use a library like pqclean.",
        "hints": NaN
      },
      {
        "problem_title": "PQC Encryption,Write a Python script to encrypt data with a post-quantum algorithm.,Advanced",
        "problem_description": "Console output: encrypted data",
        "difficulty": "- Use a PQC library.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "191",
    "title": "Edge AI",
    "description": "AI at the network edge",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"edge AI",
      " IoT",
      " inference\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Edge AI Basics",
        "url": "https://www.edge-ai-vision.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Edge AI Tutorial",
        "url": "https://www.tutorialspoint.com/edge_ai/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Edge AI Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Edge AI Hardware",
        "url": "https://www.nvidia.com/en-us/data-center/jetson/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Edge AI Frameworks",
        "url": "https://www.tensorflow.org/lite",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Edge AI Classifier,Build a Python script to classify images on an edge device using TensorFlow Lite.,Advanced",
        "problem_description": "Console output: \"Class: cat\"",
        "difficulty": "- Use tflite.Interpreter.",
        "hints": NaN
      },
      {
        "problem_title": "Edge Video Analyzer,Create a Python script to analyze video frames on an edge device.,Advanced",
        "problem_description": "Console output: motion detected",
        "difficulty": "- Use OpenCV with tflite.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "192",
    "title": "Quantum Internet",
    "description": "Future of quantum networks",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum internet",
      " entanglement\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum Internet Intro",
        "url": "https://www.nature.com/subjects/quantum-internet",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Net Tutorial",
        "url": "https://qiskit.org/textbook/ch-networks/quantum-internet.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "QI Video",
        "url": "https://www.youtube.com/watch?v=AQjW7_a5YVM",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum Internet Protocols",
        "url": "https://www.nature.com/articles/s41586-021-03550-2",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum Internet Research",
        "url": "https://www.nature.com/articles/s41586-021-03550-2",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum Internet Node,Simulate a quantum internet node in Python with 2 entangled qubits.,Advanced",
        "problem_description": "Console output: \"Entangled state\"",
        "difficulty": "- Use Qiskit entanglement.",
        "hints": NaN
      },
      {
        "problem_title": "Quantum Network Scaler,Write a Python script to scale a quantum network to 5 nodes.,Advanced",
        "problem_description": "Console output: network state",
        "difficulty": "- Use multi-qubit entanglement.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "193",
    "title": "Software Evolution",
    "description": "Managing software changes",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"evolution",
      " maintenance",
      " refactoring\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Software Evolution Guide",
        "url": "https://www.tutorialspoint.com/software_engineering/software_evolution.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Refactoring Tutorial",
        "url": "https://www.geeksforgeeks.org/software-engineering-software-re-engineering/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Evolution Video",
        "url": "https://www.youtube.com/watch?v=2t1FZ4i5_KA",
        "resource_type": "Video"
      },
      {
        "resource_title": "Software Maintenance",
        "url": "https://www.sei.cmu.edu/our-work/software-maintenance/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Software Refactoring",
        "url": "https://refactoring.com/catalog/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Software Update Manager,Write a Python script to manage software version updates for 5 modules.,Intermediate",
        "problem_description": "Console output: \"Updated: 3\"",
        "difficulty": "- Use a version dictionary.",
        "hints": NaN
      },
      {
        "problem_title": "Version Control Simulator,Build a Python script to simulate a Git commit history.,Intermediate",
        "problem_description": "Console output: commit log",
        "difficulty": "- Use a list of commits.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "194",
    "title": "Trusted Computing",
    "description": "Ensuring system trust",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"trusted computing",
      " TPM",
      " attestation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Trusted Computing Basics",
        "url": "https://www.trustedcomputinggroup.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "TPM Tutorial",
        "url": "https://www.tutorialspoint.com/trusted_computing/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "TC Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Trusted Computing Specs",
        "url": "https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.16.pdf",
        "resource_type": "Article"
      },
      {
        "resource_title": "Trusted Platform Module",
        "url": "https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.16.pdf",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Trusted Boot Verifier,Create a Python script to simulate verifying a trusted boot process.,Intermediate",
        "problem_description": "Console output: \"Boot trusted\"",
        "difficulty": "- Use a mock signature check.",
        "hints": NaN
      },
      {
        "problem_title": "TPM Data Protector,Write a Python script to simulate TPM-encrypted data storage.,Intermediate",
        "problem_description": "Console output: \"Data encrypted\"",
        "difficulty": "- Use a mock encryption.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "195",
    "title": "Humanoid Robotics",
    "description": "Designing human-like robots",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"humanoid",
      " robotics",
      " AI\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Humanoid Robotics Intro",
        "url": "https://www.tutorialspoint.com/humanoid_robotics/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Robot Design Tutorial",
        "url": "https://www.geeksforgeeks.org/robotics/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Humanoid Video",
        "url": "https://www.youtube.com/watch?v=6qK__G5l6c8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Humanoid AI",
        "url": "https://www.bostondynamics.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Humanoid Robotics Kit",
        "url": "https://www.trossenrobotics.com/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Humanoid Gesture Simulator,Design a Python script to simulate a humanoid robot\u2019s arm gesture (e.g., wave).,Intermediate",
        "problem_description": "Console output: \"Gesture: Wave\"",
        "difficulty": "- Use coordinate changes.",
        "hints": NaN
      },
      {
        "problem_title": "Humanoid Speech Synth,Create a Python script to simulate a humanoid\u2019s speech response.,Intermediate",
        "problem_description": "Console output: \"Hello\"",
        "difficulty": "- Use gTTS or similar.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "196",
    "title": "Data Governance",
    "description": "Managing data assets",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"governance",
      " policy",
      " compliance\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Data Governance Guide",
        "url": "https://www.datagovernance.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Policy Tutorial",
        "url": "https://www.tutorialspoint.com/data_governance/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Governance Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      },
      {
        "resource_title": "Data Governance Standards",
        "url": "https://www.dama.org/cpages/body-of-knowledge",
        "resource_type": "Article"
      },
      {
        "resource_title": "Data Governance Tools",
        "url": "https://www.informatica.com/products/data-governance.html",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Data Governance Tracker,Build a Python script to track data access logs for 5 users.,Intermediate",
        "problem_description": "Console output: \"Access log\"",
        "difficulty": "- Use a list of tuples.",
        "hints": NaN
      },
      {
        "problem_title": "Data Policy Enforcer,Write a Python script to enforce data retention policies.,Intermediate",
        "problem_description": "Console output: \"Retained: 3\"",
        "difficulty": "- Use a time-based rule.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "197",
    "title": "Quantum AI Ethics",
    "description": "Ethical quantum AI use",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"quantum AI",
      " ethics",
      " policy\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Quantum AI Ethics",
        "url": "https://www.nature.com/articles/s42256-020-0150-0",
        "resource_type": "Article"
      },
      {
        "resource_title": "Ethics Tutorial",
        "url": "https://www.tutorialspoint.com/quantum_ai_ethics/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "QAI Video",
        "url": "https://www.youtube.com/watch?v=PkZNo7MFNFg",
        "resource_type": "Video"
      },
      {
        "resource_title": "Quantum AI Guidelines",
        "url": "https://www.europarl.europa.eu/RegData/etudes/STUD/2020/634426/EPRS_STU(2020)634426_EN.pdf",
        "resource_type": "Article"
      },
      {
        "resource_title": "Quantum AI Policy",
        "url": "https://www.europarl.europa.eu/RegData/etudes/STUD/2020/634426/EPRS_STU(2020)634426_EN.pdf",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Quantum AI Optimizer,Write a Python script using Pennylane to optimize a quantum circuit.,Advanced",
        "problem_description": "Console output: \"Optimized cost\"",
        "difficulty": "- Use qml.optimizers.",
        "hints": NaN
      },
      {
        "problem_title": "QAI Bias Checker,Build a Python script to check bias in a quantum AI model.,Advanced",
        "problem_description": "Console output: \"Bias: 0.1\"",
        "difficulty": "- Use fairness metrics.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "198",
    "title": "Hyperledger Basics",
    "description": "Introduction to Hyperledger",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Hyperledger",
      " blockchain",
      " enterprise\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Hyperledger Basics",
        "url": "https://www.hyperledger.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Hyperledger Tutorial",
        "url": "https://www.tutorialspoint.com/hyperledger/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "HL Video",
        "url": "https://www.youtube.com/watch?v=5a0g_LEF1lE",
        "resource_type": "Video"
      },
      {
        "resource_title": "Hyperledger Tools",
        "url": "https://www.hyperledger.org/tools",
        "resource_type": "Article"
      },
      {
        "resource_title": "Hyperledger Fabric",
        "url": "https://www.hyperledger.org/use/fabric",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Hyperledger Smart Contract,Create a Python script to simulate a Hyperledger Fabric smart contract.,Advanced",
        "problem_description": "Console output: \"Contract executed\"",
        "difficulty": "- Use a mock ledger.",
        "hints": NaN
      },
      {
        "problem_title": "Hyperledger Network,Write a Python script to simulate a Hyperledger network with 3 nodes.,Advanced",
        "problem_description": "Console output: \"Network active\"",
        "difficulty": "- Use a node list.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "199",
    "title": "Computational Biology",
    "description": "Algorithms for biology",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"comp bio",
      " algorithms",
      " genomics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Computational Biology Intro",
        "url": "https://www.ncbi.nlm.nih.gov/genome/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Bio Algorithms Tutorial",
        "url": "https://www.tutorialspoint.com/computational_biology/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Comp Bio Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      },
      {
        "resource_title": "Computational Bio Research",
        "url": "https://www.ncbi.nlm.nih.gov/genome/guide/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Computational Bio Tools",
        "url": "https://www.bioconductor.org/",
        "resource_type": "Article"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Computational Bio Analyzer,Write a Python script to analyze a DNA sequence for GC content.,Intermediate",
        "problem_description": "Console output: \"GC: 60%\"",
        "difficulty": "- Use string counting.",
        "hints": NaN
      },
      {
        "problem_title": "Protein Structure Predictor,Create a Python script to predict a simple protein structure.,Advanced",
        "problem_description": "Console output: structure",
        "difficulty": "- Use a basic algorithm.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "200",
    "title": "Python Programming",
    "description": "\"Introduction to Python for general purposes\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"Python",
      " scripting",
      " data analysis\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Python Tutorial",
        "url": "https://www.w3schools.com/python/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Python Data Science",
        "url": "https://www.datacamp.com/community/tutorials/data-science-python",
        "resource_type": "Article"
      },
      {
        "resource_title": "Python Course",
        "url": "https://www.coursera.org/learn/python",
        "resource_type": "Course"
      },
      {
        "resource_title": "Python Projects",
        "url": "https://www.youtube.com/watch?v=rfscVS0vtbw",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Python Calculator,Build a Python script with a function to perform basic arithmetic (add, subtract, multiply, divide) based on user input.,Beginner,Console output of calculation results (e.g.",
        "problem_description": " 5 + 3 = 8)",
        "difficulty": "- Use if-elif for operation selection; handle division by zero.",
        "hints": NaN
      },
      {
        "problem_title": "Data Analyzer,Write a Python program to read a CSV file, calculate the average of a numeric column, and print the result.,Intermediate,Output of average (e.g.",
        "problem_description": " 75.5)",
        "difficulty": "- Use pandas or csv module; test with a sample file.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "201",
    "title": "HTML Fundamentals",
    "description": "\"Basics of HTML for web structure\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"HTML",
      " markup",
      " web design\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "HTML Cheatsheet",
        "url": "https://htmlcheatsheet.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "HTML Tutorial",
        "url": "https://www.tutorialspoint.com/html/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "HTML Course",
        "url": "https://www.khanacademy.org/computing/computer-programming/html-css",
        "resource_type": "Course"
      },
      {
        "resource_title": "HTML Video",
        "url": "https://www.youtube.com/watch?v=UB1O30fR-EE",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Personal Webpage,Design a static HTML webpage with your name, a photo, and a brief bio using at least three different tags.,Beginner,A rendered webpage with text and image,- Use <h1>",
        "problem_description": " <p>",
        "difficulty": " and <img> tags; link a local image.",
        "hints": NaN
      },
      {
        "problem_title": "Multi-Section Site,Create an HTML file with a header, navigation bar, and footer sections for a simple portfolio site.,Intermediate,A webpage with distinct header, nav, and footer sections,- Use <header>",
        "problem_description": " <nav>",
        "difficulty": " and <footer> tags.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "202",
    "title": "CSS Styling",
    "description": "\"Styling web pages with CSS\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"CSS",
      " styling",
      " layout\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "CSS Basics",
        "url": "https://www.cssbasics.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "CSS Tutorial",
        "url": "https://www.w3schools.com/css/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "CSS Course",
        "url": "https://www.udemy.com/course/css-the-complete-guide/",
        "resource_type": "Course"
      },
      {
        "resource_title": "CSS Video",
        "url": "https://www.youtube.com/watch?v=1Rs2ND1ryYc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Styled Portfolio,Design a CSS stylesheet to style the portfolio site from problem 204, adding colors, fonts, and a centered layout.,Intermediate,A styled webpage with custom colors and layout,- Use background-color",
        "problem_description": " font-family",
        "difficulty": " and margin: 0 auto.",
        "hints": NaN
      },
      {
        "problem_title": "Responsive Design,Enhance the portfolio site with CSS media queries to make it responsive for mobile (max-width: 600px).,Intermediate",
        "problem_description": "A webpage adjusting layout on mobile view",
        "difficulty": "- Use @media query to adjust div widths.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "203",
    "title": "JavaScript Basics",
    "description": "\"Interactive web development with JS\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"JavaScript",
      " DOM",
      " interactivity\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "JavaScript Guide",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
        "resource_type": "Article"
      },
      {
        "resource_title": "JS Tutorial",
        "url": "https://www.javascripttutorial.net/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "JS Course",
        "url": "https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/",
        "resource_type": "Course"
      },
      {
        "resource_title": "JS Video",
        "url": "https://www.youtube.com/watch?v=W6NZfCO5SIk",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "To-Do List App,Build a JavaScript program that adds and removes items from a to-do list displayed on a webpage, using DOM manipulation.,Intermediate",
        "problem_description": "A webpage with a dynamic list updated by buttons",
        "difficulty": "- Use document.createElement and event listeners.",
        "hints": NaN
      },
      {
        "problem_title": "Interactive Calculator,Create a JavaScript function to build a calculator that performs addition on a webpage with input fields and a result display.,Intermediate",
        "problem_description": "A webpage showing 5 + 3 = 8 after button click",
        "difficulty": "- Use parseInt for input conversion; update innerHTML.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "204",
    "title": "SQL Database Queries",
    "description": "\"Fundamentals of SQL for data management\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"SQL",
      " queries",
      " databases\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "SQL Basics",
        "url": "https://www.postgresqltutorial.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "SQL Tutorial",
        "url": "https://www.w3schools.com/sql/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "SQL Course",
        "url": "https://www.coursera.org/learn/sql-for-data-science",
        "resource_type": "Course"
      },
      {
        "resource_title": "SQL Video",
        "url": "https://www.youtube.com/watch?v=7S_tz1z_5bA",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Student Database,Design a SQL script to create a table for students with columns (id, name, age) and insert 5 sample records.,Beginner",
        "problem_description": "A table with 5 rows in a database",
        "difficulty": "- Use CREATE TABLE and INSERT INTO; test with SELECT.",
        "hints": NaN
      },
      {
        "problem_title": "Query Analyzer,Write a SQL query to find the average age of students and group them by age range (e.g., <20, 20-30, >30).,Intermediate",
        "problem_description": "Output of average ages per group",
        "difficulty": "- Use AVG and CASE for age ranges.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "205",
    "title": "Java Core Concepts",
    "description": "\"Introduction to Java programming\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Java",
      " OOP",
      " applets\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Java Tutorial",
        "url": "https://www.javatpoint.com/java-tutorial",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Java Book",
        "url": "https://www.oreilly.com/library/view/java-the-complete/9780134277584/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Java Course",
        "url": "https://www.edx.org/course/java-programming-and-software-engineering-fundamentals",
        "resource_type": "Course"
      },
      {
        "resource_title": "Java Video",
        "url": "https://www.youtube.com/watch?v=eIrMbAQSU34",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Java File Reader,Develop a Java program to read a text file and count the number of words, outputting the total.,Intermediate,Console output (e.g.",
        "problem_description": " \"Word count: 50\")",
        "difficulty": "- Use FileReader and split by spaces.",
        "hints": NaN
      },
      {
        "problem_title": "Bank Account Class,Create a Java class BankAccount with methods to deposit, withdraw, and check balance, handling overdraft.,Intermediate,Console output of balance (e.g.",
        "problem_description": " 100 after deposit)",
        "difficulty": "- Use private fields and public methods.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "206",
    "title": "R for Data Science",
    "description": "\"Using R for statistical analysis\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"R",
      " statistics",
      " data visualization\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "R Tutorial",
        "url": "https://www.r-tutor.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "R Data Analysis",
        "url": "https://www.datacamp.com/community/tutorials/r-tutorial-data-visualization",
        "resource_type": "Article"
      },
      {
        "resource_title": "R Course",
        "url": "https://www.coursera.org/learn/r-programming",
        "resource_type": "Course"
      },
      {
        "resource_title": "R Video",
        "url": "https://www.youtube.com/watch?v=_V8eKsto3Ug",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "R Data Plot,Write an R script to generate a bar plot of a vector containing the ages of 5 people (e.g., 25, 30, 22, 35, 28).,Intermediate",
        "problem_description": "A bar plot displayed in R console",
        "difficulty": "- Use barplot() function; label axes.",
        "hints": NaN
      },
      {
        "problem_title": "Statistical Summary,Create an R program to calculate the mean, median, and standard deviation of a dataset of 10 random numbers.,Intermediate,Console output of stats (e.g., mean: 50),- Use mean()",
        "problem_description": " median()",
        "difficulty": " and sd() functions.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "207",
    "title": "C Programming",
    "description": "\"Fundamentals of C language\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"C",
      " pointers",
      " system programming\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "C Tutorial",
        "url": "https://www.tutorialspoint.com/cprogramming/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "C Book",
        "url": "https://www.pearson.com/en-us/subject-catalog/p/c-programming-language/P200000003030/9780131103627",
        "resource_type": "Book"
      },
      {
        "resource_title": "C Course",
        "url": "https://www.edx.org/course/introduction-to-c-programming",
        "resource_type": "Course"
      },
      {
        "resource_title": "C Video",
        "url": "https://www.youtube.com/watch?v=KJgsSFOSQv0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "C String Reverser,Write a C program to reverse a string using pointers and print the result.,Intermediate",
        "problem_description": "Output: \"hello\" \u2192 \"olleh\"",
        "difficulty": "- Use char pointers and a loop to swap characters.",
        "hints": NaN
      },
      {
        "problem_title": "C File Writer,Create a C program to write 10 integers to a text file and read them back to verify.,Intermediate,File contains 1-10, console shows same,- Use fopen",
        "problem_description": " fprintf",
        "difficulty": " and fscanf.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "208",
    "title": "C++ Object-Oriented",
    "description": "\"Advanced OOP with C++\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"C++",
      " polymorphism",
      " STL\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "C++ Tutorial",
        "url": "https://www.w3schools.com/cpp/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "C++ Book",
        "url": "https://www.pearson.com/en-us/subject-catalog/p/c-plus-plus-primer/P200000003030/9780134375570",
        "resource_type": "Book"
      },
      {
        "resource_title": "C++ Course",
        "url": "https://www.coursera.org/learn/c-plus-plus-a",
        "resource_type": "Course"
      },
      {
        "resource_title": "C++ Video",
        "url": "https://www.youtube.com/watch?v=vLnPwxZdW4Y",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "C++ Class Calculator,Design a C++ class Calculator with methods to add and subtract, tested with user input.,Intermediate",
        "problem_description": "Console output: 5 + 3 = 8",
        "difficulty": "- Use public methods and cin for input.",
        "hints": NaN
      },
      {
        "problem_title": "C++ Template Function,Implement a C++ template function to find the maximum of two numbers of any type.,Intermediate,Output: max(5",
        "problem_description": " 3) = 5",
        "difficulty": "- Use template<typename T> syntax.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "209",
    "title": "PHP Web Development",
    "description": "\"Server-side scripting with PHP\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"PHP",
      " web",
      " MySQL\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "PHP Tutorial",
        "url": "https://www.php.net/manual/en/tutorial.php",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "PHP Guide",
        "url": "https://www.tutorialspoint.com/php/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "PHP Course",
        "url": "https://www.udemy.com/course/php-for-beginners/",
        "resource_type": "Course"
      },
      {
        "resource_title": "PHP Video",
        "url": "https://www.youtube.com/watch?v=OK_JCtrrv-c",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "PHP Form Handler,Build a PHP webpage with a form to collect a name and email, displaying them on submission.,Intermediate,Webpage shows \"Name: John",
        "problem_description": " Email: john@example.com\"",
        "difficulty": "- Use $_POST and echo.",
        "hints": NaN
      },
      {
        "problem_title": "PHP Session Manager,Create a PHP script to manage user sessions with a login/logout system.,Intermediate",
        "problem_description": "Webpage shows \"Logged in\"",
        "difficulty": "- Use session_start().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "210",
    "title": "Ruby on Rails",
    "description": "\"Web development with Ruby\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Ruby",
      " Rails",
      " MVC\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Ruby Tutorial",
        "url": "https://www.ruby-lang.org/en/documentation/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Ruby on Rails",
        "url": "https://guides.rubyonrails.org/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Ruby Course",
        "url": "https://www.coursera.org/learn/ruby-on-rails",
        "resource_type": "Course"
      },
      {
        "resource_title": "Ruby Video",
        "url": "https://www.youtube.com/watch?v=G3e_C-7L1YE",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Ruby Greeting App,Create a Ruby script to ask for a user\u2019s name and print a personalized greeting 3 times.,Beginner,Console output: \"Hello",
        "problem_description": " John!\" x3",
        "difficulty": "- Use gets.chomp and a loop.",
        "hints": NaN
      },
      {
        "problem_title": "Ruby File Processor,Write a Ruby script to read a text file and count lines.,Intermediate",
        "problem_description": "Console output: \"Lines: 5\"",
        "difficulty": "- Use File.foreach.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "211",
    "title": "Swift for iOS",
    "description": "\"Introduction to iOS app development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Swift",
      " iOS",
      " Xcode\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Swift Tutorial",
        "url": "https://www.swift.org/documentation/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Swift Guide",
        "url": "https://developer.apple.com/swift/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Swift Course",
        "url": "https://www.raywenderlich.com/swift-courses",
        "resource_type": "Course"
      },
      {
        "resource_title": "Swift Video",
        "url": "https://www.youtube.com/watch?v=8a8j0e4e9bM",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Swift View Controller,Design a Swift iOS app with a view controller displaying a label and button.,Intermediate",
        "problem_description": "A rendered iOS screen with label/button",
        "difficulty": "- Use UIKit and viewDidLoad().",
        "hints": NaN
      },
      {
        "problem_title": "Swift Data Model,Create a Swift class to model a user with name and age, testable with 3 instances.,Intermediate",
        "problem_description": "Console output: user data",
        "difficulty": "- Use struct or class.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "212",
    "title": "Kotlin for Android",
    "description": "\"Modern Android development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Kotlin",
      " Android",
      " app design\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Kotlin Tutorial",
        "url": "https://kotlinlang.org/docs/tutorials/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Kotlin Guide",
        "url": "https://developer.android.com/kotlin",
        "resource_type": "Article"
      },
      {
        "resource_title": "Kotlin Course",
        "url": "https://www.udemy.com/course/kotlin-bootcamp/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Kotlin Video",
        "url": "https://www.youtube.com/watch?v=0vL4Zv2xN8c",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Kotlin Recycler View,Build a Kotlin Android app with a RecyclerView to display a list of 5 items.,Intermediate",
        "problem_description": "A scrollable list in Android",
        "difficulty": "- Use RecyclerView.Adapter.",
        "hints": NaN
      },
      {
        "problem_title": "Kotlin Coroutine Task,Write a Kotlin script to run 3 coroutines and print their results.,Intermediate",
        "problem_description": "Console output: coroutine results",
        "difficulty": "- Use launch and async.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "213",
    "title": "Go (Golang) Basics",
    "description": "\"Introduction to Go programming\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Go",
      " concurrency",
      " web servers\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Go Tutorial",
        "url": "https://golang.org/doc/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Go Concurrency",
        "url": "https://www.golang-book.com/books/2/chapters/09_concurrency",
        "resource_type": "Article"
      },
      {
        "resource_title": "Go Course",
        "url": "https://www.coursera.org/learn/golang",
        "resource_type": "Course"
      },
      {
        "resource_title": "Go Video",
        "url": "https://www.youtube.com/watch?v=YS4e4q9oBaU",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Go Web Server,Create a Go program to start a simple web server serving a \"Hello, World\" page.,Intermediate,Webpage: \"Hello",
        "problem_description": " World\" at localhost:8080",
        "difficulty": "- Use http.ListenAndServe().",
        "hints": NaN
      },
      {
        "problem_title": "Go Concurrent Server,Design a Go server to handle 10 concurrent client connections.,Intermediate",
        "problem_description": "Console output: connections handled",
        "difficulty": "- Use goroutines.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "214",
    "title": "Rust for Systems",
    "description": "\"System programming with Rust\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Rust",
      " safety",
      " performance\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Rust Tutorial",
        "url": "https://www.rust-lang.org/learn",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Rust Book",
        "url": "https://doc.rust-lang.org/book/",
        "resource_type": "Book"
      },
      {
        "resource_title": "Rust Course",
        "url": "https://www.edx.org/course/introduction-to-rust",
        "resource_type": "Course"
      },
      {
        "resource_title": "Rust Video",
        "url": "https://www.youtube.com/watch?v=YX4aE9Z9L6w",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Rust File Reader,Write a Rust program to read a text file and print its contents.,Intermediate",
        "problem_description": "Console output: file contents",
        "difficulty": "- Use std::fs::read_to_string.",
        "hints": NaN
      },
      {
        "problem_title": "Rust Error Handler,Create a Rust program to handle file read errors gracefully.,Intermediate",
        "problem_description": "Console output: error message",
        "difficulty": "- Use Result and match.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "215",
    "title": "TypeScript for JS",
    "description": "\"Enhancing JavaScript with TypeScript\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"TypeScript",
      " typing",
      " web\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "TypeScript Tutorial",
        "url": "https://www.typescriptlang.org/docs/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "TypeScript Guide",
        "url": "https://www.tutorialspoint.com/typescript/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "TypeScript Course",
        "url": "https://www.udemy.com/course/understanding-typescript/",
        "resource_type": "Course"
      },
      {
        "resource_title": "TypeScript Video",
        "url": "https://www.youtube.com/watch?v=BwuLxPH8IDs",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "TypeScript Calculator,Build a TypeScript webpage with a calculator function adding two numbers from input fields.,Intermediate",
        "problem_description": "Webpage shows 5 + 3 = 8",
        "difficulty": "- Use type annotations and DOM.",
        "hints": NaN
      },
      {
        "problem_title": "TypeScript Module System,Write a TypeScript module to export a math utility function, imported in another file.,Intermediate",
        "problem_description": "Console output: function result",
        "difficulty": "- Use export and import.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "216",
    "title": "Scala Functional",
    "description": "\"Functional programming with Scala\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Scala",
      " FP",
      " Akka\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Scala Tutorial",
        "url": "https://www.scala-lang.org/documentation/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Scala Guide",
        "url": "https://docs.scala-lang.org/tour/tour-of-scala.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Scala Course",
        "url": "https://www.coursera.org/learn/progfun1",
        "resource_type": "Course"
      },
      {
        "resource_title": "Scala Video",
        "url": "https://www.youtube.com/watch?v=0xLJBxD7Dj0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Scala Parallel Task,Create a Scala script to run 3 tasks in parallel and print their completion times.,Intermediate",
        "problem_description": "Console output: task times",
        "difficulty": "- Use Future.sequence.",
        "hints": NaN
      },
      {
        "problem_title": "Scala Pattern Matching,Design a Scala script to use pattern matching on a list of 5 elements.,Intermediate",
        "problem_description": "Console output: matched cases",
        "difficulty": "- Use match expression.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "217",
    "title": "Perl Scripting",
    "description": "\"Introduction to Perl scripting\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Perl",
      " text processing",
      " automation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Perl Tutorial",
        "url": "https://perldoc.perl.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Perl Guide",
        "url": "https://www.tutorialspoint.com/perl/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Perl Course",
        "url": "https://www.udemy.com/course/perl-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Perl Video",
        "url": "https://www.youtube.com/watch?v=7o3u1wl2IG4",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Perl Data Parser,Write a Perl script to parse a CSV file with 5 rows and print the data.,Intermediate",
        "problem_description": "Console output: parsed rows",
        "difficulty": "- Use Text::CSV module.",
        "hints": NaN
      },
      {
        "problem_title": "Perl Web Scraper,Create a Perl script to scrape links from a sample HTML file.,Intermediate",
        "problem_description": "Console output: link list",
        "difficulty": "- Use HTML::LinkExtor.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "218",
    "title": "Shell Scripting",
    "description": "\"Automating tasks with shell scripts\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"Shell",
      " Bash",
      " automation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Shell Scripting Guide",
        "url": "https://www.gnu.org/software/bash/manual/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Shell Tutorial",
        "url": "https://www.tutorialspoint.com/unix/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Shell Course",
        "url": "https://www.udemy.com/course/linux-shell-scripting/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Shell Video",
        "url": "https://www.youtube.com/watch?v=oxuRxHQ2tRI",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Shell Backup Script,Design a Bash script to back up a directory to a timestamped folder.,Beginner",
        "problem_description": "New folder with files",
        "difficulty": "- Use cp and date command.",
        "hints": NaN
      },
      {
        "problem_title": "Shell Task Automator,Write a Bash script to automate 3 system tasks (e.g., update, clean).,Intermediate",
        "problem_description": "Console output: tasks completed",
        "difficulty": "- Use sequential commands.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "219",
    "title": "MATLAB for Math",
    "description": "\"Mathematical computing with MATLAB\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"MATLAB",
      " math",
      " simulation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "MATLAB Tutorial",
        "url": "https://www.mathworks.com/help/matlab/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "MATLAB Guide",
        "url": "https://www.tutorialspoint.com/matlab/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "MATLAB Course",
        "url": "https://www.coursera.org/learn/matlab",
        "resource_type": "Course"
      },
      {
        "resource_title": "MATLAB Video",
        "url": "https://www.youtube.com/watch?v=QXa9vW8c1AI",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "MATLAB Signal Plot,Create a MATLAB script to plot a sine wave over 100 points.,Intermediate",
        "problem_description": "A sine wave graph",
        "difficulty": "- Use plot() and sin().",
        "hints": NaN
      },
      {
        "problem_title": "MATLAB Image Filter,Write a MATLAB script to apply a blur filter to a 100x100 image.,Intermediate",
        "problem_description": "Blurred image",
        "difficulty": "- Use imfilter().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "220",
    "title": "Julia for Science",
    "description": "\"High-performance computing with Julia\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Julia",
      " science",
      " parallel\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Julia Tutorial",
        "url": "https://julialang.org/learning/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Julia Guide",
        "url": "https://docs.julialang.org/en/v1/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Julia Course",
        "url": "https://www.coursera.org/learn/julia",
        "resource_type": "Course"
      },
      {
        "resource_title": "Julia Video",
        "url": "https://www.youtube.com/watch?v=FDlK5XJ5eXI",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Julia Matrix Solver,Write a Julia script to solve a 3x3 linear system using built-in functions.,Intermediate",
        "problem_description": "Console output: solution vector",
        "difficulty": "- Use \\ operator.",
        "hints": NaN
      },
      {
        "problem_title": "Julia Data Visualizer,Create a Julia script to plot a scatter graph of 10 points.,Intermediate",
        "problem_description": "A scatter plot",
        "difficulty": "- Use Plots.jl.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "221",
    "title": "COBOL Legacy Systems",
    "description": "\"Programming for legacy systems\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"COBOL",
      " mainframe",
      " business\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "COBOL Tutorial",
        "url": "https://www.tutorialspoint.com/cobol/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "COBOL Guide",
        "url": "https://www.microfocus.com/en-us/products/cobol/",
        "resource_type": "Article"
      },
      {
        "resource_title": "COBOL Course",
        "url": "https://www.udemy.com/course/cobol-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "COBOL Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "COBOL File Processor,Build a COBOL program to read a file with 5 records and print them.,Intermediate",
        "problem_description": "Console output: records",
        "difficulty": "- Use FILE SECTION and READ.",
        "hints": NaN
      },
      {
        "problem_title": "COBOL Report Generator,Write a COBOL program to generate a report from a file with 5 records.,Intermediate",
        "problem_description": "Console output: formatted report",
        "difficulty": "- Use REPORT SECTION.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "222",
    "title": "Fortran for Science",
    "description": "\"Scientific computing with Fortran\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Fortran",
      " HPC",
      " simulation\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Fortran Tutorial",
        "url": "https://www.tutorialspoint.com/fortran/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Fortran Guide",
        "url": "https://www.fortran.com/",
        "resource_type": "Article"
      },
      {
        "resource_title": "Fortran Course",
        "url": "https://www.coursera.org/learn/fortran",
        "resource_type": "Course"
      },
      {
        "resource_title": "Fortran Video",
        "url": "https://www.youtube.com/watch?v=1j4mCIpVu_g",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Fortran Array Calculator,Create a Fortran program to sum a 10-element array and print the result.,Intermediate,Console output: sum (e.g.",
        "problem_description": " 55)",
        "difficulty": "- Use DO loop.",
        "hints": NaN
      },
      {
        "problem_title": "Fortran Matrix Multiplier,Write a Fortran program to multiply two 3x3 matrices.,Intermediate",
        "problem_description": "Console output: result matrix",
        "difficulty": "- Use nested DO loops.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "223",
    "title": "Assembly Language",
    "description": "\"Low-level programming basics\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Assembly",
      " x86",
      " hardware\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Assembly Tutorial",
        "url": "https://www.tutorialspoint.com/assembly_programming/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Assembly Guide",
        "url": "https://www.cs.virginia.edu/~evans/cs216/guides/x86.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "Assembly Course",
        "url": "https://www.udemy.com/course/assembly-language/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Assembly Video",
        "url": "https://www.youtube.com/watch?v=6F5g3nW8p_Q",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Assembly Number Adder,Write an x86 Assembly program to add two numbers and store the result.,Advanced,Register holds sum (e.g.",
        "problem_description": " 8)",
        "difficulty": "- Use MOV and ADD instructions.",
        "hints": NaN
      },
      {
        "problem_title": "Assembly Loop Counter,Create an x86 Assembly program to count from 1 to 10.,Advanced",
        "problem_description": "Console output: 1 to 10",
        "difficulty": "- Use LOOP instruction.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "224",
    "title": "Elixir for Concurrency",
    "description": "\"Concurrent programming with Elixir\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Elixir",
      " concurrency",
      " OTP\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Elixir Tutorial",
        "url": "https://elixir-lang.org/getting-started/introduction.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Elixir Guide",
        "url": "https://www.tutorialspoint.com/elixir/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Elixir Course",
        "url": "https://www.coursera.org/learn/elixir",
        "resource_type": "Course"
      },
      {
        "resource_title": "Elixir Video",
        "url": "https://www.youtube.com/watch?v=0xLJBxD7Dj0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Elixir Message Passer,Design an Elixir script with 2 processes passing a message back and forth.,Intermediate",
        "problem_description": "Console output: \"Message received\"",
        "difficulty": "- Use spawn and send.",
        "hints": NaN
      },
      {
        "problem_title": "Elixir Task Supervisor,Write an Elixir script to supervise 3 tasks with a supervisor.,Intermediate",
        "problem_description": "Console output: task statuses",
        "difficulty": "- Use Supervisor.start_link().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "225",
    "title": "Haskell Pure FP",
    "description": "\"Pure functional programming\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Haskell",
      " monads",
      " purity\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Haskell Tutorial",
        "url": "https://www.haskell.org/tutorial/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Haskell Guide",
        "url": "https://www.tutorialspoint.com/haskell/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Haskell Course",
        "url": "https://www.edx.org/course/introduction-to-haskell",
        "resource_type": "Course"
      },
      {
        "resource_title": "Haskell Video",
        "url": "https://www.youtube.com/watch?v=0fK8k7vXJ1o",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Haskell List Filter,Write a Haskell function to filter a list for even numbers, testable with [1..10].,Intermediate,Console output: [2,4,6,8",
        "problem_description": "10]",
        "difficulty": "- Use filter and even.",
        "hints": NaN
      },
      {
        "problem_title": "Haskell Monad Example,Create a Haskell script to use a Maybe monad for safe division.,Intermediate",
        "problem_description": "Console output: \"Result: Just 5\"",
        "difficulty": "- Use return and >>=.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "226",
    "title": "Lua for Games",
    "description": "\"Scripting for game development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Lua",
      " games",
      " scripting\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Lua Tutorial",
        "url": "https://www.lua.org/pil/contents.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Lua Guide",
        "url": "https://www.tutorialspoint.com/lua/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Lua Course",
        "url": "https://www.udemy.com/course/lua-scripting/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Lua Video",
        "url": "https://www.youtube.com/watch?v=0vL4Zv2xN8c",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Lua Game Score,Create a Lua script for a game to track and display a score increasing by 10 each round.,Beginner",
        "problem_description": "Console output: \"Score: 20\"",
        "difficulty": "- Use a while loop.",
        "hints": NaN
      },
      {
        "problem_title": "Lua Table Sorter,Write a Lua script to sort a table of 5 numbers.,Intermediate",
        "problem_description": "Console output: sorted table",
        "difficulty": "- Use table.sort().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "227",
    "title": "Groovy for JVM",
    "description": "\"JVM-based scripting with Groovy\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Groovy",
      " JVM",
      " scripting\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Groovy Tutorial",
        "url": "https://groovy-lang.org/documentation.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Groovy Guide",
        "url": "https://www.tutorialspoint.com/groovy/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Groovy Course",
        "url": "https://www.coursera.org/learn/groovy",
        "resource_type": "Course"
      },
      {
        "resource_title": "Groovy Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Groovy Web Scraper,Build a Groovy script to scrape titles from a sample HTML file.,Intermediate",
        "problem_description": "Console output: list of titles",
        "difficulty": "- Use XmlSlurper.",
        "hints": NaN
      },
      {
        "problem_title": "Groovy JSON Parser,Create a Groovy script to parse a JSON file with 5 objects.,Intermediate",
        "problem_description": "Console output: parsed data",
        "difficulty": "- Use JsonSlurper.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "228",
    "title": "PowerShell Automation",
    "description": "\"Windows automation with PowerShell\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"PowerShell",
      " automation",
      " admin\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "PowerShell Tutorial",
        "url": "https://docs.microsoft.com/en-us/powershell/scripting/overview",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "PowerShell Guide",
        "url": "https://www.tutorialspoint.com/powershell/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "PowerShell Course",
        "url": "https://www.udemy.com/course/powershell/",
        "resource_type": "Course"
      },
      {
        "resource_title": "PowerShell Video",
        "url": "https://www.youtube.com/watch?v=oxuRxHQ2tRI",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "PowerShell File Lister,Write a PowerShell script to list all .txt files in a directory.,Beginner",
        "problem_description": "Console output: file list",
        "difficulty": "- Use Get-ChildItem.",
        "hints": NaN
      },
      {
        "problem_title": "PowerShell Task Scheduler,Design a PowerShell script to schedule a task to run daily.,Intermediate",
        "problem_description": "Console output: task scheduled",
        "difficulty": "- Use Register-ScheduledJob.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "229",
    "title": "Dart for Flutter",
    "description": "\"Cross-platform app development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Dart",
      " Flutter",
      " mobile\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Dart Tutorial",
        "url": "https://dart.dev/tutorials",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Dart Guide",
        "url": "https://www.tutorialspoint.com/dart/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Dart Course",
        "url": "https://www.udemy.com/course/dart-and-flutter/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Dart Video",
        "url": "https://www.youtube.com/watch?v=8a8j0e4e9bM",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Dart Todo App,Design a Dart console app to manage a to-do list with add and remove functions.,Intermediate",
        "problem_description": "Console output: updated list",
        "difficulty": "- Use a List<dynamic>.",
        "hints": NaN
      },
      {
        "problem_title": "Dart Web Client,Create a Dart script to fetch data from a public API.,Intermediate",
        "problem_description": "Console output: API data",
        "difficulty": "- Use http package.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "230",
    "title": "Objective-C for iOS",
    "description": "\"Legacy iOS development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Objective-C",
      " iOS",
      " Cocoa\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Objective-C Tutorial",
        "url": "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Objective-C Guide",
        "url": "https://www.tutorialspoint.com/objective_c/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Objective-C Course",
        "url": "https://www.udemy.com/course/objective-c/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Objective-C Video",
        "url": "https://www.youtube.com/watch?v=8e5zL8x1tYc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Objective-C Counter,Create an Objective-C program with a class to increment a counter 5 times.,Intermediate",
        "problem_description": "Console output: \"Count: 5\"",
        "difficulty": "- Use @property and a loop.",
        "hints": NaN
      },
      {
        "problem_title": "Objective-C File Reader,Write an Objective-C program to read a text file and print lines.,Intermediate",
        "problem_description": "Console output: file lines",
        "difficulty": "- Use NSString.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "231",
    "title": "Visual Basic .NET",
    "description": "\"Windows application development\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"VB.NET",
      " Windows",
      " forms\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "VB.NET Tutorial",
        "url": "https://www.tutorialspoint.com/vb.net/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "VB.NET Guide",
        "url": "https://docs.microsoft.com/en-us/dotnet/visual-basic/",
        "resource_type": "Article"
      },
      {
        "resource_title": "VB.NET Course",
        "url": "https://www.udemy.com/course/visual-basic-net/",
        "resource_type": "Course"
      },
      {
        "resource_title": "VB.NET Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "VB.NET Form Designer,Build a VB.NET Windows Form with a button and label showing click count.,Intermediate",
        "problem_description": "Form shows \"Clicks: 3\"",
        "difficulty": "- Use Button.Click event.",
        "hints": NaN
      },
      {
        "problem_title": "VB.NET Database Query,Create a VB.NET app to query a database and display results.,Intermediate",
        "problem_description": "Form shows data",
        "difficulty": "- Use DataGridView.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "232",
    "title": "SAS for Analytics",
    "description": "\"Statistical analysis with SAS\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"SAS",
      " analytics",
      " statistics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "SAS Tutorial",
        "url": "https://www.tutorialspoint.com/sas/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "SAS Guide",
        "url": "https://www.sas.com/en_us/home.html",
        "resource_type": "Article"
      },
      {
        "resource_title": "SAS Course",
        "url": "https://www.coursera.org/learn/sas-programming",
        "resource_type": "Course"
      },
      {
        "resource_title": "SAS Video",
        "url": "https://www.youtube.com/watch?v=7o3u1wl2IG4",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "SAS Data Summary,Write a SAS script to summarize a dataset with 10 observations.,Intermediate",
        "problem_description": "Console output: summary stats",
        "difficulty": "- Use PROC MEANS.",
        "hints": NaN
      },
      {
        "problem_title": "SAS Report Generator,Build a SAS script to generate a formatted report from a dataset.,Intermediate",
        "problem_description": "Console output: report",
        "difficulty": "- Use PROC REPORT.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "233",
    "title": "Prolog for AI",
    "description": "\"Logic programming with Prolog\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Prolog",
      " AI",
      " logic\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Prolog Tutorial",
        "url": "https://www.swi-prolog.org/pldoc/man?section=intro",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Prolog Guide",
        "url": "https://www.tutorialspoint.com/prolog/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Prolog Course",
        "url": "https://www.udemy.com/course/prolog-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Prolog Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Prolog Family Tree,Create a Prolog program to define a family tree and query parent relationships.,Intermediate",
        "problem_description": "Console output: \"Parent: yes\"",
        "difficulty": "- Use facts and queries.",
        "hints": NaN
      },
      {
        "problem_title": "Prolog Logic Solver,Write a Prolog script to solve a simple logic puzzle (e.g., 3 houses).,Intermediate",
        "problem_description": "Console output: solution",
        "difficulty": "- Use constraints.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "234",
    "title": "Scheme for Learning",
    "description": "\"Intro to Scheme programming\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Scheme",
      " Lisp",
      " recursion\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Scheme Tutorial",
        "url": "https://www.scheme.com/tspl4/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Scheme Guide",
        "url": "https://www.tutorialspoint.com/scheme/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Scheme Course",
        "url": "https://www.edx.org/course/introduction-to-computational-thinking-and-scheme",
        "resource_type": "Course"
      },
      {
        "resource_title": "Scheme Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Scheme List Reverser,Write a Scheme function to reverse a list, testable with (1 2 3).,Intermediate",
        "problem_description": "Console output: (3 2 1)",
        "difficulty": "- Use recursion.",
        "hints": NaN
      },
      {
        "problem_title": "Scheme Tree Builder,Create a Scheme script to build a binary tree and print it.,Intermediate",
        "problem_description": "Console output: tree",
        "difficulty": "- Use cons and car/cdr.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "235",
    "title": "Smalltalk OOP",
    "description": "\"Pure OOP with Smalltalk\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Smalltalk",
      " OOP",
      " GUI\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Smalltalk Tutorial",
        "url": "https://www.smalltalk.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Smalltalk Guide",
        "url": "https://www.tutorialspoint.com/smalltalk/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Smalltalk Course",
        "url": "https://www.udemy.com/course/smalltalk-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Smalltalk Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Smalltalk Counter,Design a Smalltalk script to create an object counting up to 5.,Intermediate",
        "problem_description": "Console output: \"Count: 5\"",
        "difficulty": "- Use a loop method.",
        "hints": NaN
      },
      {
        "problem_title": "Smalltalk GUI,Write a Smalltalk script to create a simple GUI with a button.,Intermediate",
        "problem_description": "A window with button",
        "difficulty": "- Use Morph.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "236",
    "title": "Ada for Safety",
    "description": "\"High-reliability programming\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Ada",
      " safety",
      " embedded\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Ada Tutorial",
        "url": "https://learn.adacore.com/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Ada Guide",
        "url": "https://www.tutorialspoint.com/ada/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Ada Course",
        "url": "https://www.coursera.org/learn/ada",
        "resource_type": "Course"
      },
      {
        "resource_title": "Ada Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Ada Task Manager,Build an Ada program to manage 3 concurrent tasks printing messages.,Intermediate",
        "problem_description": "Console output: task messages",
        "difficulty": "- Use task type.",
        "hints": NaN
      },
      {
        "problem_title": "Ada Exception Handler,Create an Ada program to handle a division-by-zero exception.,Intermediate",
        "problem_description": "Console output: error message",
        "difficulty": "- Use exception block.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "237",
    "title": "CLIPS for AI",
    "description": "\"Expert systems with CLIPS\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"CLIPS",
      " AI",
      " rules\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "CLIPS Tutorial",
        "url": "https://www.clipsrules.net/index.php?title=CLIPS_Basic_Programming_Guide",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "CLIPS Guide",
        "url": "https://www.tutorialspoint.com/clips/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "CLIPS Course",
        "url": "https://www.udemy.com/course/clips-expert-system/",
        "resource_type": "Course"
      },
      {
        "resource_title": "CLIPS Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "CLIPS Expert System,Create a CLIPS rule-based system to diagnose a simple fault (e.g., \"light off\").,Intermediate",
        "problem_description": "Console output: \"Diagnosis: Bulb\"",
        "difficulty": "- Use (defrule).",
        "hints": NaN
      },
      {
        "problem_title": "CLIPS Inference Engine,Write a CLIPS script to infer a conclusion from 5 facts.,Intermediate",
        "problem_description": "Console output: conclusion",
        "difficulty": "- Use (assert).",
        "hints": NaN
      }
    ]
  },
  {
    "id": "238",
    "title": "Erlang for Concurrency",
    "description": "\"Concurrent systems with Erlang\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Erlang",
      " concurrency",
      " telecom\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Erlang Tutorial",
        "url": "https://www.erlang.org/doc/getting_started/users_guide.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Erlang Guide",
        "url": "https://www.tutorialspoint.com/erlang/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Erlang Course",
        "url": "https://www.coursera.org/learn/erlang",
        "resource_type": "Course"
      },
      {
        "resource_title": "Erlang Video",
        "url": "https://www.youtube.com/watch?v=0xLJBxD7Dj0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Erlang Process Ping,Write an Erlang script with 2 processes pinging each other.,Intermediate",
        "problem_description": "Console output: \"Ping received\"",
        "difficulty": "- Use spawn and !.",
        "hints": NaN
      },
      {
        "problem_title": "Erlang Distributed Node,Create an Erlang script to connect 2 distributed nodes.,Intermediate",
        "problem_description": "Console output: \"Nodes linked\"",
        "difficulty": "- Use net_adm:ping().",
        "hints": NaN
      }
    ]
  },
  {
    "id": "239",
    "title": "F# for .NET",
    "description": "\"Functional programming on .NET\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"F#",
      " .NET",
      " FP\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "F# Tutorial",
        "url": "https://fsharp.org/learn.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "F# Guide",
        "url": "https://www.tutorialspoint.com/fsharp/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "F# Course",
        "url": "https://www.udemy.com/course/fsharp/",
        "resource_type": "Course"
      },
      {
        "resource_title": "F# Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "F# Sequence Generator,Design an F# script to generate a sequence of Fibonacci numbers up to 10.,Intermediate,Console output: [0,1,1,2,3,5",
        "problem_description": "8]",
        "difficulty": "- Use recursion.",
        "hints": NaN
      },
      {
        "problem_title": "F# Async Task,Write an F# script to run 3 asynchronous tasks.,Intermediate",
        "problem_description": "Console output: task results",
        "difficulty": "- Use async.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "240",
    "title": "D for Performance",
    "description": "\"High-performance D programming\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"D",
      " performance",
      " systems\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "D Tutorial",
        "url": "https://dlang.org/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "D Guide",
        "url": "https://www.tutorialspoint.com/d/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "D Course",
        "url": "https://www.udemy.com/course/d-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "D Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "D Array Sorter,Write a D program to sort an array of 5 integers using a bubble sort.,Intermediate",
        "problem_description": "Console output: sorted array",
        "difficulty": "- Use a for loop.",
        "hints": NaN
      },
      {
        "problem_title": "D File Writer,Create a D program to write a string to a file.,Intermediate",
        "problem_description": "Console output: \"Written\"",
        "difficulty": "- Use std.stdio.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "241",
    "title": "Crystal for Simplicity",
    "description": "\"Simple and fast Crystal coding\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Crystal",
      " web",
      " performance\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Crystal Tutorial",
        "url": "https://crystal-lang.org/docs/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Crystal Guide",
        "url": "https://www.tutorialspoint.com/crystal/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Crystal Course",
        "url": "https://www.udemy.com/course/crystal-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Crystal Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Crystal Web Server,Create a Crystal script to start a web server serving a static page.,Intermediate",
        "problem_description": "Webpage at localhost:8080",
        "difficulty": "- Use HTTP::Server.",
        "hints": NaN
      },
      {
        "problem_title": "Crystal JSON Parser,Write a Crystal script to parse a JSON file with 5 objects.,Intermediate",
        "problem_description": "Console output: parsed data",
        "difficulty": "- Use JSON.parse.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "242",
    "title": "Nim for Efficiency",
    "description": "\"Efficient programming with Nim\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Nim",
      " performance",
      " systems\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Nim Tutorial",
        "url": "https://nim-lang.org/documentation.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Nim Guide",
        "url": "https://www.tutorialspoint.com/nim/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Nim Course",
        "url": "https://www.udemy.com/course/nim-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Nim Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Nim File Encoder,Build a Nim program to encode a text file with base64.,Intermediate",
        "problem_description": "Console output: encoded text",
        "difficulty": "- Use encode() function.",
        "hints": NaN
      },
      {
        "problem_title": "Nim Web Client,Create a Nim script to fetch data from a public API.,Intermediate",
        "problem_description": "Console output: API data",
        "difficulty": "- Use httpclient.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "243",
    "title": "OCaml for FP",
    "description": "\"Functional programming with OCaml\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"OCaml",
      " FP",
      " type safety\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "OCaml Tutorial",
        "url": "https://ocaml.org/learn/tutorials.html",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "OCaml Guide",
        "url": "https://www.tutorialspoint.com/ocaml/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "OCaml Course",
        "url": "https://www.coursera.org/learn/ocaml",
        "resource_type": "Course"
      },
      {
        "resource_title": "OCaml Video",
        "url": "https://www.youtube.com/watch?v=0fK8k7vXJ1o",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "OCaml List Mapper,Write an OCaml function to double each element in a list, testable with [1;2;3].,Intermediate",
        "problem_description": "Console output: [2;4;6]",
        "difficulty": "- Use List.map.",
        "hints": NaN
      },
      {
        "problem_title": "OCaml Recursive Solver,Design an OCaml function to solve a factorial recursively.,Intermediate",
        "problem_description": "Console output: \"6\"",
        "difficulty": "- Use let rec.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "244",
    "title": "Pascal for Learning",
    "description": "\"Intro to Pascal programming\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"Pascal",
      " structured",
      " education\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Pascal Tutorial",
        "url": "https://www.tutorialspoint.com/pascal/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Pascal Guide",
        "url": "https://www.freepascal.org/docs.var",
        "resource_type": "Article"
      },
      {
        "resource_title": "Pascal Course",
        "url": "https://www.udemy.com/course/pascal-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Pascal Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Pascal File Reader,Create a Pascal program to read a text file and count lines.,Intermediate",
        "problem_description": "Console output: \"Lines: 5\"",
        "difficulty": "- Use TextFile and ReadLn.",
        "hints": NaN
      },
      {
        "problem_title": "Pascal Array Sorter,Write a Pascal program to sort an array of 5 integers.,Intermediate",
        "problem_description": "Console output: sorted array",
        "difficulty": "- Use a bubble sort.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "245",
    "title": "Delphi for Windows",
    "description": "\"Windows development with Delphi\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"Delphi",
      " Windows",
      " GUI\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Delphi Tutorial",
        "url": "https://docwiki.embarcadero.com/RADStudio/en/Delphi",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Delphi Guide",
        "url": "https://www.tutorialspoint.com/delphi/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Delphi Course",
        "url": "https://www.udemy.com/course/delphi-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Delphi Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Delphi Database Viewer,Design a Delphi app to display a database table in a grid.,Intermediate",
        "problem_description": "A form with data grid",
        "difficulty": "- Use TADOConnection.",
        "hints": NaN
      },
      {
        "problem_title": "Delphi Chart Creator,Create a Delphi app to display a chart of 5 data points.,Intermediate",
        "problem_description": "A form with chart",
        "difficulty": "- Use TChart.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "246",
    "title": "APL for Math",
    "description": "\"Mathematical notation with APL\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"APL",
      " math",
      " array\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "APL Tutorial",
        "url": "https://www.dyalog.com/student-apl-contest.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "APL Guide",
        "url": "https://www.tutorialspoint.com/apl/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "APL Course",
        "url": "https://www.udemy.com/course/apl-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "APL Video",
        "url": "https://www.youtube.com/watch?v=5q4sF-q0qMc",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "APL Array Calculator,Write an APL script to sum a 3x3 matrix.,Intermediate,Console output: sum (e.g.",
        "problem_description": " 45)",
        "difficulty": "- Use +/\u2375.",
        "hints": NaN
      },
      {
        "problem_title": "APL Matrix Inverter,Create an APL script to invert a 2x2 matrix.,Intermediate",
        "problem_description": "Console output: inverted matrix",
        "difficulty": "- Use matrix operations.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "247",
    "title": "Logo for Education",
    "description": "\"Educational programming with Logo\"",
    "prerequisites": [],
    "difficulty": "Beginner",
    "keywords": [
      "\"Logo",
      " education",
      " graphics\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Logo Tutorial",
        "url": "https://www.calormen.com/jslogo/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Logo Guide",
        "url": "https://www.tutorialspoint.com/logo/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Logo Course",
        "url": "https://www.udemy.com/course/logo-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Logo Video",
        "url": "https://www.youtube.com/watch?v=0fKUqmpV-j0",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Logo Turtle Drawer,Create a Logo script to draw a square using the turtle.,Beginner",
        "problem_description": "A square on screen",
        "difficulty": "- Use REPEAT 4 [FD 100 RT 90].",
        "hints": NaN
      },
      {
        "problem_title": "Logo Spiral Generator,Write a Logo script to draw a spiral with 10 turns.,Intermediate",
        "problem_description": "A spiral on screen",
        "difficulty": "- Use REPEAT with increasing FD.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "248",
    "title": "Forth for Embedded",
    "description": "\"Embedded systems with Forth\"",
    "prerequisites": [],
    "difficulty": "Advanced",
    "keywords": [
      "\"Forth",
      " embedded",
      " stack\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "Forth Tutorial",
        "url": "https://www.forth.com/resources/forth-primer/",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "Forth Guide",
        "url": "https://www.tutorialspoint.com/forth/index.htm",
        "resource_type": "Article"
      },
      {
        "resource_title": "Forth Course",
        "url": "https://www.udemy.com/course/forth-programming/",
        "resource_type": "Course"
      },
      {
        "resource_title": "Forth Video",
        "url": "https://www.youtube.com/watch?v=9Q4S8aV8qP8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "Forth Stack Calculator,Build a Forth program to add two numbers using the stack.,Intermediate",
        "problem_description": "Console output: \"Sum: 8\"",
        "difficulty": "- Use : and +.",
        "hints": NaN
      },
      {
        "problem_title": "Forth Loop Counter,Create a Forth program to count from 1 to 5.,Intermediate",
        "problem_description": "Console output: 1 to 5",
        "difficulty": "- Use DO LOOP.",
        "hints": NaN
      }
    ]
  },
  {
    "id": "249",
    "title": "VBA for Office",
    "description": "\"Automation in Microsoft Office\"",
    "prerequisites": [],
    "difficulty": "Intermediate",
    "keywords": [
      "\"VBA",
      " Office",
      " macros\""
    ],
    "tags": [],
    "default_resources": [
      {
        "resource_title": "VBA Tutorial",
        "url": "https://www.tutorialspoint.com/vba/index.htm",
        "resource_type": "Tutorial"
      },
      {
        "resource_title": "VBA Guide",
        "url": "https://docs.microsoft.com/en-us/office/vba/library-reference",
        "resource_type": "Article"
      },
      {
        "resource_title": "VBA Course",
        "url": "https://www.udemy.com/course/vba-excel/",
        "resource_type": "Course"
      },
      {
        "resource_title": "VBA Video",
        "url": "https://www.youtube.com/watch?v=5L6X8iLh8x8",
        "resource_type": "Video"
      }
    ],
    "problem_sets": [
      {
        "problem_title": "VBA Excel Macro,Write a VBA macro to sum a column of 10 numbers in Excel.,Intermediate,Excel cell shows sum (e.g.",
        "problem_description": " 55)",
        "difficulty": "- Use Range and Sum.",
        "hints": NaN
      },
      {
        "problem_title": "VBA Chart Generator,Create a VBA macro to generate a bar chart from 5 data points in Excel.,Intermediate",
        "problem_description": "Excel shows bar chart",
        "difficulty": "- Use Charts.Add.",
        "hints": NaN
      }
    ]
  }
]
